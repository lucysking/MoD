---
title: "Analyses for Aims 2-4 of \"Pregnancy during the pandemic: The impact of COVID-19-related stress on risk for prenatal depression\""

author: "Lucy S. King"
date: "2020"
output: 
  github_document:
    toc: true
    toc_depth: 2
---

# Environment
```{r}
library(tidyverse)
library(MplusAutomation)
library(glmnet)
library(broom)
library(ggpubr)
library(ggsci)
library(formattable)
library(performance)
library(parameters)
library(car)
library(effectsize)
library(corrr)
library(relaimpo)
library(labelled)
library(codebook)
library(lubridate)

source("R_rainclouds.R")
source("mplus.R")

cope_preg_clean_file <- "~/Box/Mooddata_Coordinating/COPE/data/wrangled_cleaned_data_PREG_20201208.csv"
cope_matched_IDs_file <- "~/Box/lucy_king_files/BABIES/cope/matched_COPE_IDs_n82_20201207.csv"

set.seed(100588)
```

```{r}
plot_histogram <- function(data, x) {
  x = sym(x)
  
  ggplot(data, aes(!!x)) +
  geom_histogram(binwidth = 1)
}

plot_boxplot <- function(data, x, y) {
  x = enquo(x)
  y = enquo(y)
  
  ggplot(data, aes(!!x, !!y)) +
    geom_boxplot()
}

plot_lm <- function(data, x, y) {
  x = enquo(x)
  y = enquo(y)
  
  ggplot(data, aes(!!x, !!y)) +
    geom_point() +
    geom_smooth(method = "lm")  
}

customBlue = "#0009B"
customRed = "#ff7f7f"
```

# Read in data

```{r}
cc2_preg <- 
  read_csv(cope_preg_clean_file) %>% 
  left_join(
    read_csv(cope_matched_IDs_file) %>% 
      rename(cope_id = ID),
    by = "cope_id"
  ) %>% 
  mutate(
    matched_subset = as.factor(matched_subset)
  )
  
cc2_preg_cal <-
  cc2_preg %>% 
  filter(!is.na(ca_county))
```

## Sample characteristics

```{r}
cc2_preg %>% 
  summarise_at(
    vars(
      mom_age,
      gestational_weeks,
      ppl_in_home_allchild,
      ppl_in_home_adults,
      inr_fpl,
      epds_total
    ),
    funs(mean, sd, min, max), na.rm = TRUE
  ) 
```

```{r}
cc2_preg %>% 
  count(epds_total >= 11) %>% 
  mutate(per = n / sum(n))

cc2_preg %>% 
  count(epds_total >= 13) %>% 
  mutate(per = n / sum(n))

cc2_preg %>% 
  count(epds_total >= 15) %>% 
  mutate(per = n / sum(n))
```


```{r}
cc2_preg %>% 
  count(inr_fpl > 1)

cc2_preg %>% 
  count(income) %>% 
  mutate(per = n / sum(n)) %>% 
  arrange(desc(n))


cc2_preg %>% 
  count(education) %>% 
  mutate(per = n / sum(n)) %>% 
  arrange(desc(n))
```

```{r}
cc2_preg %>% 
  count(job_status) %>% 
  mutate(
    per = n / sum(n)
  ) %>% 
  arrange(desc(n))
```

```{r}
cc2_preg %>% 
  count(first_pregnancy) %>% 
  mutate(per = n / sum(n))
```


```{r}
cc2_preg %>% 
  count(race_native_american) %>% 
  mutate(per = n / sum(n)) %>% 
  arrange(desc(n))

cc2_preg %>% 
  count(race_c) %>% 
  mutate(per = n / sum(n)) %>% 
  arrange(desc(n))
```
```{r}
cc2_preg %>% 
  count(marriage_status) %>% 
  mutate(per = n / sum(n)) %>% 
  arrange(desc(n))
```

```{r}
cc2_preg %>% 
  count(!is.na(address_clean))

cc2_preg <-
  cc2_preg %>% 
  mutate(
    state_current_ca = case_when(
      str_detect(address_clean, "CA") ~ "CA",
      str_detect(address_clean, "CALIFORNIA") ~ "CA",
      str_detect(zip_code_clean, "^94") ~ "CA",
      !is.na(ca_county) ~ "CA",
      is.na(ca_county) & !is.na(address_clean) ~ "Other state"
    )
  )

cc2_preg %>% 
  count(state_current_ca)

cc2_preg %>% 
  count(!is.na(ca_county))

cc2_preg %>% 
  count(ca_county) %>% 
  arrange(desc(n))

cc2_preg %>% 
  summarise(n_distinct(census_tract))
```

```{r}
cc2_preg %>% 
  count(past_mh_sa_treatment) %>% 
  mutate(per = n / sum(n))
```

```{r}
cc2_preg %>% 
  count(self_test) # 1 = tested positive
```


```{r}
cc2_preg %>% 
  dplyr::select(starts_with("epds"), -epds_total) %>% 
  psych::alpha()
```
```{r}
cc2_preg %>% 
  mutate(
    weeks_since_collected = (today_date %--% today()) / weeks(1),
    current_age_months = (weeks_since_collected - (40 - gestational_weeks)) / 4
  ) %>% 
  ggplot(aes(current_age_months)) +
  geom_histogram() +
  theme_minimal()
```

## Pregnancy: Histograms and tables for stress/adversity variables

### Tables for count variables

Determine inclusion as indicators based on counts
```{r}
# generate a list of frequency tables for the show_table function
tables_list <- purrr::map(
  cc2_preg %>% 
    dplyr::select(
      prenatal_care_changes,
      curr_finance_impacts,
      fut_finance_impacts,
      covid_restrictions
    ),
  janitor::tabyl 
)

tables_list
```

### Histograms for continuous variables

Based on histograms, preg_birth_concern_rating, preg_supp_concern_rating, mat_care_concern_rating, and child_health_concern_rating all have floor effects because of the way question was asked (first asked to indicate yes/no whether they were concerned and then only if said yes provided rating) and the fact that I imputed "0" for anyone who said they weren't concerned. 

```{r}
histograms_names <- 
  cc2_preg %>% 
  dplyr::select(
    preg_birth_concern_rating,
    preg_supp_concern_rating,
    mat_care_concern_rating,
    child_health_concern_rating,
    covid_self_distress,
    covid_family_distress,
    current_job_distress,
    future_job_distress,
    reduced_access_distress,
    impact_covid_rating,
    impact_covid_valence
  ) %>% 
  names()

histograms_list <-
  map(histograms_names, ~plot_histogram(cc2_preg, .x))

histograms_list
```

```{r}
cc2_preg %>% 
  dplyr::select(
    `Current employment/finance impacts` = curr_finance_impacts,
    `Expected employment/finance impacts` = fut_finance_impacts,
    `Concern for birth medical care` = preg_birth_concern_rating,
    `Concern for birth social support` = preg_supp_concern_rating,
    `Concern for caregiving capacity` = mat_care_concern_rating,
    `Concern for infant's health` = child_health_concern_rating,
    `Distress social disruptions` = social_disruptions_rating,
    `Distress own illness` = covid_self_distress,
    `Distress family illness` = covid_family_distress,
    `Distress current employment/finance` = current_job_distress,
    `Distress expected employment/finance` = future_job_distress,
    `Distress reduced access` = reduced_access_distress,
    `Overall impact to daily life` = impact_covid_rating,
    `Valence of overall impact` = impact_covid_valence,
    `Changes to prenatal care` = prenatal_care_changes
  ) %>% 
  gather(key, value) %>% 
  ggplot(aes(value)) +
  geom_histogram(binwidth = 1) +
  theme_pubr() +
  theme(
    axis.title = element_blank(), 
    axis.text.y = element_text(size = 14),
    axis.text.x = element_text(size = 14),
    strip.text = element_text(size = 11)
  ) +
  facet_wrap(.~key, scales = "free")

ggsave(
  "~/Box/lucy_king_files/BABIES/cope/figures/stress_adversity_histograms.png",
  width = 13,
  height = 9
)
```

## Correlations among stress/adversity variables

```{r}
stress_vars_preg <-
  cc2_preg %>% 
  dplyr::select(
    cope_id, 
    prenatal_care_changes,
    preg_birth_concern_rating,
    preg_supp_concern_rating,
    mat_care_concern_rating,
    child_health_concern_rating,
    covid_self_distress,
    covid_family_distress,
    curr_finance_impacts,
    current_job_distress,
    fut_finance_impacts,
    future_job_distress,
    social_disruptions_rating,
    covid_restrictions,
    reduced_access_distress,
    impact_covid_rating,
    impact_covid_valence,
    covid_confirmed_number,
    covid_positive_contacts
  ) 

```

```{r}
stress_vars_preg %>% 
  dplyr::select(-cope_id) %>% 
  correlate(method = "kendall") %>% 
  rearrange() %>% 
  shave() %>% 
  fashion() 
```

# Aim 2: EFA

## Table of stress/adversity items
```{r}
stress_vars_preg_table <-
  cc2_preg %>% 
  dplyr::select(
    `Changes to prenatal care` = prenatal_care_changes,
    `Concern for birth medical care` = preg_birth_concern_rating,
    `Concern for birth social support` =  preg_supp_concern_rating,
    `Concern for caregiving capacity` = mat_care_concern_rating,
    `Concern for infant's health` = child_health_concern_rating,
    `Distress due to own illness` = covid_self_distress,
    `Distress due to family illness` = covid_family_distress,
    `Current employment/financial impacts` = curr_finance_impacts,
    `Distress due to current financial impacts` = current_job_distress,
    `Expected employment/financial impacts` = fut_finance_impacts,
    `Distress due to expected financial impacts` = future_job_distress,
    `Distress due to social disruptions` = social_disruptions_rating,
    `Self-quarantine/government restrictions` = covid_restrictions,
    `Distress due to reduced access` = reduced_access_distress,
    `Overall impact to daily life` = impact_covid_rating,
    `Valence of overall impact` = impact_covid_valence
  ) %>% 
  gather(variable, value) %>% 
  group_by(variable) %>% 
  summarise_at(
    vars(value),
    list(
     "mean" = mean,
      "sd" = sd,
      "min" = min,
      "max" = max
    ),
    na.rm = TRUE
  )

stress_vars_preg_table %>% 
  formattable(
    align = c(
      "l",
      "c",
      "c",
      "c",
      "c"
    )
  ) %>% 
  rename(
    Variable = variable,
    Mean = mean,
    SD = sd,
    Minimum = min,
    Maximum = max
  )
```

## Export data for Mplus
Conducting a series of EFAs in Mplus. Factor analysis benefits from samples with N ≥ 300 (Costello & Osborne, 2005; MacCallum et al., 1999) and where N ≥ 5 * the number of variables. 

```{r}
#prepareMplusData(stress_vars_preg, "~/Desktop/BABIES/COPE/covid_stress_vars_preg.dat")
```

## Import results from Mplus

### Factor loadings
```{r}
model_summary <- readModels(
  "~/Desktop/BABIES/COPE/cope_git/efa_models/efa_preg_1_3_delete_covid_exp_delete_crossloadings.out", 
  recursive = TRUE
  )

factor_names = c(
  "Factor 1:\n Objective Adversity", 
  "Factor 2:\n Subjective Stress"
  )

efa2_loadings <-
  model_summary$parameters$efa$f2$loadings$estimates %>% 
  as.data.frame() %>% 
  rownames_to_column(var = "indicator") %>% 
  rename(
    F1 = `1`,
    F2 = `2`
  ) %>% 
  gather(factor, loading, -indicator) %>%  
  mutate(factor = as.character(factor(factor, labels = factor_names))) 

order <- 
  efa2_loadings %>%
  group_by(indicator) %>%
  top_n(1, abs(loading)) %>%
  ungroup() %>%
  arrange(desc(factor), abs(loading)) %>%
  mutate(order = 1:length(levels(factor(efa2_loadings$indicator)))) %>%
  dplyr::select(indicator, order)
```

Variance explained not provided my Mplus:
http://www.statmodel.com/discussion/messages/8/46.html?1472140515
"Variance explained in a set of variables by a factor is not given in Mplus. We have not been inclined to add this for 3 reasons. One is that factor analysis does not aim to explain variance but correlations. The other is that typically, oblique factors need to be extracted in which case the concept of variance explained by a factor is not clearcut. Variance explained also connects with Principal Component Analysis which is not factor analysis."

### Final variables included
```{r}
stress_vars_preg <-
  cc2_preg %>% 
  dplyr::select(
    cope_id,
    `Changes to prenatal care` = prenatal_care_changes,
    `Concern for birth medical care` = preg_birth_concern_rating,
    `Concern for birth social support` =  preg_supp_concern_rating,
    `Concern for caregiving capacity` = mat_care_concern_rating,
    `Concern for infants's health` = child_health_concern_rating,
    `Distress due to own illness` = covid_self_distress,
    `Distress due to family illness` = covid_family_distress,
    `Current empl oyment/financial impacts` = curr_finance_impacts,
    `Expected employment/financial impacts` = fut_finance_impacts,
    `Distress due to social disruptions` = social_disruptions_rating,
    `Distress due to reduced access` = reduced_access_distress,
    `Overall impact to daily life` = impact_covid_rating,
    `Valence of overall impact` = impact_covid_valence
  ) 
```

### Factor scores
Factor scores cannot be extracted from EFA in Mplus. Therefore, factor scores were extracted using a CFA in which the variance of each factor was set at 1, their correlation was set at .409 (as in the final 2-factor solution), and factors were set at the factor loadings identified in the final 2-factor solution.
```{r}
fscores <-
  read_delim(
    "~/Desktop/BABIES/COPE/cfa_pre_2_fscores.txt", 
    col_names = FALSE, 
    delim = " "
  ) %>% 
  dplyr::select(
    f1_score = X14,
    f1_se = X15,
    f2_score = X16,
    f2_se = X17
  ) %>% 
  mutate_all(
    as.numeric
  )
```

```{r}
stress_vars_preg <-
  stress_vars_preg %>% 
  cbind(fscores)

stress_vars_preg %>% 
  dplyr::select(
    "Objective adversity" = f1_score, 
    "Subjective stress" = f2_score
    ) %>% 
  gather(factor, score) %>% 
  ggplot(aes(score)) +
  geom_histogram() +
  theme_pubr() +
  theme(
    plot.title = element_text(size = 20),
    strip.text = element_text(size = 20),
    axis.title.y = element_text(size = 20),
    axis.title.x = element_text(size = 20),
    axis.text.y = element_text(size = 16),
    axis.text.x = element_text(size = 16),
    # remove legend
    legend.position = "none"
  ) +
  labs(
    x = "Estimated factor score"
  ) +
  facet_grid(.~factor)

ggsave(
  "~/Box/lucy_king_files/BABIES/cope/figures/f1_f2_hist.png",
  width = 7,
  height = 5
)

stress_vars_preg %>% 
  ggplot(aes(f1_score, f2_score)) +
  geom_point(alpha = 1/2, size = 1.5) +
  geom_smooth(method = "lm", size = 2.5, color = "black") +
  scale_x_continuous(breaks = seq.int(-2, 2, 1)) +
  theme_pubr() +
  theme(
    plot.title = element_text(size = 20),
    strip.text = element_text(size = 20),
    axis.title.y = element_text(size = 20),
    axis.title.x = element_text(size = 20),
    axis.text.y = element_text(size = 16),
    axis.text.x = element_text(size = 16),
    # remove legend
    legend.position = "none"
  ) +
  labs(
    x = "Objective adversity\nestimated factor score",
    y = "Subjective stress\nestimated factor score"
  ) 

ggsave("~/Box/lucy_king_files/BABIES/cope/figures/f1_f2_cor.png")

stress_vars_preg %>% 
  dplyr::select(-cope_id) %>% 
  correlate(method = "pearson") %>% 
  rearrange() %>% 
  shave() %>% 
  fashion() 
```

```{r}
cc2_preg <-
  cc2_preg %>% 
  left_join(
    stress_vars_preg %>% 
      dplyr::select(cope_id, starts_with("f1"), starts_with("f2")),
    by = "cope_id"
  )

cc2_preg_cal <-
  cc2_preg_cal %>% 
  left_join(
    stress_vars_preg %>% 
      dplyr::select(cope_id, starts_with("f1"), starts_with("f2")),
    by = "cope_id"
  )


```


### Visualize loadings
```{r}
loadings_plot_data <- 
  efa2_loadings %>% 
  left_join(order, by = "indicator") %>% 
  mutate(
    loading_chr = as.character(round(loading, 2)),
    loading_chr = case_when(
      loading_chr == "0" ~ "-0.01",
      loading_chr == "1" ~ "1.00",
      loading_chr == "-.1" ~ "-.10",
      TRUE ~ loading_chr
    )
  )

loadings_plot_data %>% 
  mutate(
    indicator = dplyr::recode(
      indicator,
      "CARE_CHG" = "Changes to prenatal care",
      "CUR_FIN" = "Current employment/financial impacts",
      "FUT_FIN" = "Expected employment/financial impacts",
      "FAM_R" = "Distress due to family illness",
      "SELF_R" = "Distress due to own illness",
      "ACCES_R" = "Distress due to reduced access",
      "CHEALTH_" = "Concern for infant's health",
      "BIRTH_R" = "Concern for birth medical care",
      "PSUPP_R" = "Concern for birth social support",
      "IMPACT_R" = "Overall impact to daily life",
      "S_DIS_R" = "Distress due to social disurptions",
      "MCARE_R" = "Concern for caregiving capacity",
      "IMPACT_V" = "Valence of overall impact"
    )
  ) %>% 
  ggplot(
    aes(
      x = factor, 
      y = reorder(indicator, order), 
      fill = loading,
      label = loading_chr
    )
  ) +
  geom_tile(color = "black") +
  geom_text(size = 6, color = "black") +
  scale_fill_distiller(
    limits = c(-1, 1.1), 
    palette = "RdYlBu",
    guide = guide_colorbar(barheight = 20)
  ) +
  scale_x_discrete(position = "top") +
  theme_minimal() +
  theme(
    legend.title = element_text(size = 16),
    legend.text = element_text(size = 14),
    axis.title = element_blank(), 
    axis.text.y = element_text(size = 18),
    axis.text.x = element_text(size = 17)
  )

ggsave(
  "~/Box/lucy_king_files/BABIES/cope/figures/EFA_2.png",
  height = 7,
  width = 11,
  dpi = 800
)
```
## Differences between matched and non-matched COPE participants in factor scores
```{r}
t.test(cc2_preg_cal$f1_score ~ cc2_preg_cal$matched_subset)
t.test(cc2_preg_cal$f2_score ~ cc2_preg_cal$matched_subset)
```

## Single most stressful thing
```{r}
cc2_preg_cal %>% 
  count(source_stress_covid) %>% 
  mutate(per = n / sum(n)) %>% 
  arrange(desc(n))


cc2_preg_cal %>% 
  count(source_stress_covid) %>% 
  mutate(per = n / sum(n)) %>% 
  arrange(desc(n)) %>% 
  ggplot(aes(fct_reorder(source_stress_covid, per), per)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  geom_col() +
  theme_pubr() +
  theme(
    axis.text.x = element_text(size = 15),
    axis.title.y = element_text(size = 20),
    axis.title.x = element_text(size = 18),
    axis.text.y = element_text(size = 16),
    strip.text = element_text(size = 18),
    legend.position = "none"
  ) +
  labs(
    y = "Percentage endorsed",
    x = NULL
  ) +
  coord_flip()

ggsave(
  "~/Box/lucy_king_files/BABIES/cope/figures/most_stressful_thing.png",
  height = 4,
  width = 8.5,
  dpi = 1000
)
```

# Open-ended responses
```{r}
preg_birth_concerns_txt <-
  cc2_preg %>% 
  dplyr::select(cope_id, preg_birth_concern_describe) %>% 
  filter(!is.na(preg_birth_concern_describe)) 

write_csv(
  preg_birth_concerns_txt,
  "~/Box/Mooddata_Coordinating/COPE/data/qualitative_data/PREG_birth_concerns.csv"
)

preg_supp_concerns_txt <-
  cc2_preg %>% 
  dplyr::select(cope_id, preg_supp_concern_describe) %>% 
  filter(!is.na(preg_supp_concern_describe)) 

write_csv(
  preg_supp_concerns_txt,
  "~/Box/Mooddata_Coordinating/COPE/data/qualitative_data/PREG_supp_concerns.csv"
)

preg_infant_health_concern_txt <-
  cc2_preg %>% 
  dplyr::select(cope_id, child_health_concern_describe) %>% 
  filter(!is.na(child_health_concern_describe)) 

write_csv(
  preg_infant_health_concern_txt,
  "~/Box/Mooddata_Coordinating/COPE/data/qualitative_data/PREG_infant_health_concerns.csv"
)

mat_care_concern_txt <-
  cc2_preg %>% 
  dplyr::select(cope_id, mat_care_concern_describe) %>% 
  filter(!is.na(mat_care_concern_describe)) 

write_csv(
  mat_care_concern_txt,
  "~/Box/Mooddata_Coordinating/COPE/data/qualitative_data/PREG_mat_care_concerns.csv"
)
```

# Aim 3

## Tables for categorical variables
```{r}
# generate a list of frequency tables for the show_table function
tables_list <- purrr::map(
  cc2_preg_cal %>% 
    dplyr::select(
      race_poc,
      covid_high_risk_self,
      first_pregnancy,
      history_mh_disorder,
      pregnancy_loss_d,
      education,
      job_status_d,
      medical_history_d,
      home_multi,
      immigrant
    ),
  janitor::tabyl 
)
tables_list
```

## Histograms and descriptives for continuous and count variables

```{r}
cc2_preg_cal %>% 
  dplyr::select(
    Asthma = asthma_pctl,
    `Low birth weight` = low_birth_weight_pctl,
    `Cardiovascular disease` = cardio_disease_pctl,
    `Low education` = education_ce_pctl,
    `Poverty` = poverty_pctl,
    `Housing burden` = housing_burden_pctl,
    `Linguistic isolation` = linguistic_isolation_pctl,
    `Unemployment` = unemployment_ce_pctl
  ) %>% 
  gather(key, value) %>% 
  ggplot(aes(value)) +
  geom_histogram(binwidth = 10) +
  theme_pubr() +
  theme(
    axis.title = element_blank(), 
    axis.text.y = element_text(size = 14),
    axis.text.x = element_text(size = 14),
    strip.text = element_text(size = 12)
  ) +
  facet_wrap(.~key, scales = "free")

ggsave(
  "~/Box/lucy_king_files/BABIES/cope/figures/calenviro_histograms.png",
  width = 13,
  height = 9
)
```

```{r}
cc2_preg_cal %>% 
  dplyr::select(
    `Income-to-Federal Poverty Line` = inr_fpl,
    `Prenatal medical conditions` = prenatal_complications,
    `Support from prenatal care team` = prenatal_support,
    `Current social support` = current_social_supp_rating,
    `Previous social support` = prior_social_supp_rating,
    `Change in social support` = social_supp_change,
    `Environmental resources` =  access
  ) %>% 
  gather(key, value) %>% 
  ggplot(aes(value)) +
  geom_histogram(binwidth = 1) +
  theme_pubr() +
  theme(
    axis.title = element_blank(), 
    axis.text.y = element_text(size = 14),
    axis.text.x = element_text(size = 14),
    strip.text = element_text(size = 12)
  ) +
  facet_wrap(.~key, scales = "free")

ggsave(
  "~/Box/lucy_king_files/BABIES/cope/figures/individual_risks_histograms.png",
  width = 13,
  height = 9
)
```

```{r}
risk_protect_vars_table <- 
  cc2_preg_cal %>% 
  dplyr::select(
    Asthma = asthma_pctl,
    `Low birth weight` = low_birth_weight_pctl,
    `Cardiovascular disease` = cardio_disease_pctl,
    `Low education` = education_ce_pctl,
    `Poverty` = poverty_pctl,
    `Housing burden` = housing_burden_pctl,
    `Linguistic isolation` = linguistic_isolation_pctl,
    `Unemployment` = unemployment_ce_pctl,
    `Income-to-Federal Poverty Line` = inr_fpl,
    `Prenatal medical conditions` = prenatal_complications,
    `Support from prenatal care team` = prenatal_support,
    `Current social support` = current_social_supp_rating,
    `Previous social support` = prior_social_supp_rating,
    `Change in social support` = social_supp_change,
    `Environmental resources` =  access
  ) %>% 
  gather(variable, value) %>% 
  group_by(variable) %>% 
  summarise_at(
    vars(value),
    list(
      "mean" = mean,
      "sd" = sd,
      "min" = min,
      "max" = max
    ),
    na.rm = TRUE
  )

risk_protect_vars_table %>% 
  formattable(
    align = c(
      "l",
      "c",
      "c",
      "c",
      "c"
    )
  ) %>% 
  rename(
    Variable = variable,
    Mean = mean,
    SD = sd,
    Minimum = min,
    Maximum = max
  )
```

## Elastic net regression


### dummy code categorical variables
```{r}
cc2_preg_cal <-
  cc2_preg_cal %>% 
  mutate(
    race_poc_dummy = if_else(
      race_poc == "White", 0, 1
    ),
    job_status_dummy = if_else(
      job_status_d == "other", 0, 1
    ),
    pregnancy_loss_dummy = if_else(
      pregnancy_loss_d == 0, 0, 1
    ),
    medical_history_dummy = if_else(
      medical_history_d == 0, 0, 1
    ),
   # remove value for one person who reported no access; biasing results
   access = if_else(
     access == 0, NA_real_, access
   ),
   low_income_dummy = if_else(
      income_numeric <= 2 * fpl_threshold, 1, 0
    )
  ) 
```

### Prepare data
```{r}
z_score <- function(x) {
  diff_mu <- x - mean(x, na.rm = T)
  sd <- sd(x, na.rm = T)
  diff_mu / sd
}
```

```{r}
cal_env_vars <-
  cc2_preg_cal %>% 
  dplyr::select(
    asthma_pctl,
    low_birth_weight_pctl,
    cardio_disease_pctl,
    education_ce_pctl,
    poverty_pctl,
    housing_burden_pctl,
    linguistic_isolation_pctl,
    unemployment_ce_pctl
  ) %>% 
  names()

cc2_preg_cal_en <-
  cc2_preg_cal %>% 
  dplyr::select(
    f1_score,
    f2_score,
    all_of(cal_env_vars),
    prenatal_complications,
    prenatal_support,
    current_social_supp_rating,
    social_supp_change,
    access,
    mom_age,
    immigrant,
    covid_high_risk_self,
    first_pregnancy,
    history_mh_disorder,
    medical_history_dummy,
    home_multi,
    pregnancy_loss_dummy,
    race_poc_dummy,
    low_income_dummy
  ) %>% 
  mutate_at(
    vars(asthma_pctl:mom_age),
    funs(z_score)
  ) %>% 
  mutate_all(
    as.numeric
  ) %>% 
  na.omit()
```

```{r}
predictors <- 
  cc2_preg_cal_en %>% 
  dplyr::select(-f1_score, -f2_score) %>% 
  as.matrix()

f1_score <- z_score(cc2_preg_cal_en$f1_score)
f2_score <- z_score(cc2_preg_cal_en$f2_score)
```

### Run model over 100 increasingly relaxed lambda values

#### F1 model
```{r}
fit_net_cope_f1 <- glmnet(
  predictors, 
  f1_score, 
  family = "gaussian", 
  standarize = FALSE
)
plot(fit_net_cope_f1, label = TRUE)
```

#### F2 model
```{r}
fit_net_cope_f2 <- glmnet(
  predictors, 
  f2_score, 
  family = "gaussian", 
  standarize = FALSE
)
plot(fit_net_cope_f2, label = TRUE)
```

### Run leave-one-out cross validation to identify optimal lambda value
If nfolds is set to the sample size = leave-one-out CV
https://sciphy-stats.com/post/2019-01-25-finalizing-glmnet-models/

```{r}
k <- nrow(cc2_preg_cal_en)
```

#### F1 
```{r}
# run cross validation
fit_cv_f1 <- cv.glmnet(
    x = predictors, 
    y = f1_score, 
    type.measure = "mse", 
    family = "gaussian", 
    alpha = .5,
    nfolds = k,
    grouped = FALSE,
    standarize = FALSE # variables already standardized
  )

lambda_f1 <- fit_cv_f1$lambda.min
```

#### F2
```{r}
# run cross validation
fit_cv_f2 <- cv.glmnet(
    x = predictors, 
    y = f2_score, 
    type.measure = "mse", 
    family = "gaussian", 
    alpha = .5,
    nfolds = k,
    grouped = FALSE,
    standarize = FALSE # variables already standardized
  )

lambda_f2 <- fit_cv_f2$lambda.min
```

### Calculate EN model performance

#### F1
```{r}
# save model matrix
cc2_preg_cal_en_f1 <-
  cc2_preg_cal_en %>% 
  dplyr::select(-f2_score)

x_f1 <- model.matrix(f1_score ~ ., cc2_preg_cal_en_f1)[,-1]

# get predicted values
y_hat_f1 <- predict(fit_cv_f1,  newx = x_f1,  s = "lambda.min")

r_sq_f1 <- 1 - (sum((f1_score - y_hat_f1)^2) / sum((f1_score - mean(f1_score))^2))

r_sq_f1
pretty_sq_f1 <- round(r_sq_f1, 2)
```

#### F2
```{r}
# save model matrix
cc2_preg_cal_en_f2 <-
  cc2_preg_cal_en %>% 
  dplyr::select(-f1_score)

x_f2 <- model.matrix(f2_score ~ ., cc2_preg_cal_en_f2)[,-1]

# get predicted values
y_hat_f2 <- predict(fit_cv_f2,  newx = x_f2,  s = "lambda.min")

r_sq_f2 <- 1 - (sum((f2_score - y_hat_f2)^2) / sum((f2_score - mean(f2_score))^2))

r_sq_f2
pretty_sq_f2 <- round(r_sq_f2, 2)
```

### Print coefficients for model with optimal lambda 

#### F1
```{r}
fit_net_final_f1 <- glmnet(
  predictors, 
  f1_score, 
  family = "gaussian", 
  alpha = .5, 
  lambda = lambda_f1,
  standardize = FALSE # variables already standardized
)
coefs_f1 <- coef(fit_net_final_f1) 
coefs_f1
```

```{r}
en_coef_tbl_f1 <- 
  tidy(coef(fit_net_final_f1))  %>% 
  dplyr::select(-column) %>% 
  mutate(
    `Variable type` = dplyr::recode(
      row,
      "(Intercept)" = NA_character_,
      "asthma_pctl" = "Community-level",
      "low_birth_weight_pctl" = "Community-level",
      "linguistic_isolation_pctl" = "Community-level",
      "poverty_pctl" = "Community-level",
      "inr_fpl" = "Individual-level",
      "prenatal_complications" = "Individual-level",
      "prenatal_support" = "Individual-level",
      "access" = "Individual-level",
      "mom_age" = "Individual-level",
      "immigrant" = "Individual-level",
      "covid_high_risk_self" = "Individual-level",
      "first_pregnancy" = "Individual-level",
      "history_mh_disorder" = "Individual-level",
    )
  ) %>% 
  rename(
    Variable = row,
    `Elastic net estimate` = value
  ) %>%
  mutate(
    Variable = dplyr::recode(
      Variable,
      "(Intercept)" = "(Intercept)",
      "asthma_pctl" = "Rate of ER visits for asthma",
      "low_birth_weight_pctl" = "% low birth weight",
      "linguistic_isolation_pctl" = "% limited english-speaking",
      "poverty_pctl" = "% in deep poverty",
      "prenatal_complications" = "Prenatal medical conditions",
      "prenatal_support" = "Support from prenatal care team",
      "access" = "Environmental resources",
      "mom_age" = "Age",
      "immigrant" = "Immigrant to U.S.",
      "first_pregnancy" = "Primiparous",
      "history_mh_disorder" = "History of mood or anxiety disorder"
    )
  ) %>% 
  mutate_at(vars(`Elastic net estimate`) , round, 2) %>% 
  dplyr::select(
    `Variable`,
    `Variable type`,
    everything()
  )

en_coef_tbl_f1
```

```{r fig.height=6, fig.width=11}
en_coef_tbl_f1 %>% 
  filter(!is.na(`Variable type`)) %>% 
  ggplot(
    aes(
      fct_reorder(Variable, `Elastic net estimate`), 
      `Elastic net estimate`, 
      fill = `Variable type`)
  ) +
  geom_col() +
  scale_y_continuous(breaks = seq.int(-.20, .20, .05)) +
  scale_fill_jama() +
  theme_pubclean() +
  theme(
    axis.title = element_text(size = 18),
    axis.text = element_text(size = 16),
    legend.text = element_text(size = 16),
    plot.title = element_text(size = 17),
  ) +
  coord_flip() +
  labs(
    title = paste0("R-squared = ", pretty_sq_f1),
    x = NULL,
    fill = NULL,
    y = "COVID-19 objective adversity\nelastic net estimate"
  )

ggsave(
  "~/Box/lucy_king_files/BABIES/cope/figures/en_f1_20201111.png",
  height = 6,
  width = 11
)
```

#### F2
```{r}
fit_net_final_f2 <- glmnet(
  predictors, 
  f2_score, 
  family = "gaussian", 
  alpha = .5, 
  lambda = lambda_f2,
  standardize = FALSE # variables already standardized
)
coefs_f2 <- coef(fit_net_final_f2) 
coefs_f2
```

```{r}
en_coef_tbl_f2 <- 
  tidy(coef(fit_net_final_f2))  %>% 
  dplyr::select(-column) %>% 
  mutate(
    `Variable type` = dplyr::recode(
      row,
      "(Intercept)" = NA_character_,
      "low_birth_weight_pctl" = "Community-level",
      "cardio_disease_pctl" = "Community-level",
      "linguistic_isolation_pctl" = "Community-level",
      "poverty_pctl" = "Community-level",
      "education_ce_pctl" = "Community-level",
      "prenatal_complications" = "Individual-level",
      "prenatal_support" = "Individual-level",
      "access" = "Individual-level",
      "mom_age" = "Individual-level",
      "immigrant" = "Individual-level",
      "covid_high_risk_self" = "Individual-level",
      "first_pregnancy" = "Individual-level",
      "history_mh_disorder" = "Individual-level",
      "race_poc_dummy" = "Individual-level",
      "social_supp_change" = "Individual-level"
    )
  ) %>% 
  rename(
    Variable = row,
    `Elastic net estimate` = value
  ) %>%
  mutate(
    Variable = dplyr::recode(
      Variable,
       "(Intercept)" = "(Intercept)",
      "low_birth_weight_pctl" = "Rate of low weight births",
      "education_ce_pctl" = "% low educational attainment",
      "linguistic_isolation_pctl" = "% limited English-speaking",
      "cardio_disease_pctl" = "Rate of ER visits for heart attacks",
      "poverty_pctl" = "% in deep poverty",
      "prenatal_complications" = "Prenatal medical conditions",
      "prenatal_support" = "Support from prenatal care team",
      "access" = "Environmental resources",
      "mom_age" = "Age",
      "social_supp_change" = "Change in social support",
      "immigrant" = "Immigrant to U.S.",
      "covid_high_risk_self" = "High risk for COVID-19",
      "first_pregnancy" = "Primiparous",
      "history_mh_disorder" = "History of mood or anxiety disorder",
      "race_poc_dummy" = "Person of color"
    )
  ) %>% 
  mutate_at(vars(`Elastic net estimate`) , round, 3) %>% 
  dplyr::select(
    `Variable`,
    `Variable type`,
    everything()
  )

en_coef_tbl_f2
```

```{r fig.height=6, fig.width=11}
en_coef_tbl_f2 %>% 
  filter(!is.na(`Variable type`)) %>% 
  ggplot(
    aes(
      fct_reorder(Variable, `Elastic net estimate`), 
      `Elastic net estimate`, 
      fill = `Variable type`)
  ) +
  geom_col() +
  scale_y_continuous(breaks = seq.int(-.20, .20, .05)) +
  scale_fill_jama() +
  theme_pubclean() +
  theme(
    axis.title = element_text(size = 18),
    axis.text = element_text(size = 16),
    legend.text = element_text(size = 16),
    plot.title = element_text(size = 17),
  ) +
  coord_flip() +
  labs(
    title = paste0("R-squared = ", pretty_sq_f2),
    x = NULL,
    fill = NULL,
    y = "COVID-19 subjective stress\nelastic net estimate"
  )

ggsave(
  "~/Box/lucy_king_files/BABIES/cope/figures/en_f2_20201111.png",
  height = 6,
  width = 11
)
```

### Zero-order effect sizes

#### F1

##### visualize zero-order effects

###### binary variables
```{r}
cc2_preg_cal %>% 
  dplyr::select(
    first_pregnancy,
    immigrant,
    history_mh_disorder,
    f1_score
  ) %>% 
  mutate(
    first_pregnancy = recode_factor(
      first_pregnancy,
      "1" = "Primiparous",
      "0" = "Multiparous"
    ),
    history_mh_disorder = recode_factor(
      history_mh_disorder,
      "1" = "Positive history",
      "0" = "No history"
    ),
    immigrant = recode_factor(
      immigrant,
      "1" = "U.S. immigrant",
      "0" = "Born in U.S."
    )
  ) %>% 
  gather(variable, value, -f1_score) %>% 
  mutate(
    variable = recode_factor(
      variable,
      "first_pregnancy" = "Parity",
      "history_mh_disorder" = "History of mood/anxiety disorder",
      "immigrant" = "Immigrant to U.S."
    ),
    value = factor(value)
  ) %>% 
  ggplot(aes(value, f1_score)) +
  geom_flat_violin(
    aes(fill = value),
    position = position_nudge(x = .21, y = 0), 
    adjust = 1.5, 
    trim = TRUE, 
    alpha = .65, 
    colour = NA
  ) +
  geom_boxplot(
    aes(x = value, y = f1_score, fill = value),
    outlier.shape = NA, 
    alpha = .65, 
    width = .4, 
    colour = "black"
  ) +
  scale_fill_npg() +
  theme_pubr() +
  theme(
    axis.text.x = element_text(size = 18, angle = 320, hjust = .1),
    axis.title.y = element_text(size = 20),
    axis.title.x = element_text(size = 22),
    axis.text.y = element_text(size = 16),
    strip.text = element_text(size = 18),
    legend.position = "none"
  ) +
  facet_wrap(.~variable, scales = "free") +
  labs(
    x = NULL,
    y = "Objective COVID-19 adversity\n(estimated factor score)"
  )

ggsave(
  "~/Box/lucy_king_files/BABIES/cope/figures/f1_EN_discrete_vars.jpeg",
  dpi = 1000,
  width = 13,
  height = 5
)
```

###### continuous variables
```{r}
# all 
cc2_preg_cal %>% 
  dplyr::select(
    asthma_pctl,
    low_birth_weight_pctl,
    linguistic_isolation_pctl,
    poverty_pctl,
    mom_age,
    prenatal_complications,
    prenatal_support,
    access,
    f1_score
  ) %>% 
  gather(variable, value, -f1_score) %>% 
  mutate(
    variable = recode_factor(
      variable,
      "access" = "Environmental resources",
      "asthma_pctl" = "Rate of ER visits for asthma",
      "linguistic_isolation_pctl" = "% limited English-speaking",
      "low_birth_weight_pctl" = "Rate of low weight births",
      "mom_age" = "Age",
      "poverty_pctl" = "% in poverty",
      "prenatal_complications" = "Prenatal medical conditions",
      "prenatal_support" = "Support from prenatal care team"
    )
  ) %>% 
  plot_lm(value, f1_score) +
  theme_pubclean() +
  facet_wrap(.~variable, scales = "free")
```

```{r}
# community-level
cc2_preg_cal %>% 
  dplyr::select(
    asthma_pctl,
    low_birth_weight_pctl,
    linguistic_isolation_pctl,
    poverty_pctl,
    f1_score
  ) %>% 
  gather(variable, value, -f1_score) %>% 
  mutate(
    variable = recode_factor(
      variable,
      "asthma_pctl" = "Rate of ER visits for asthma",
      "linguistic_isolation_pctl" = "% limited English-speaking",
      "low_birth_weight_pctl" = "Rate of low weight births",
      "poverty_pctl" = "% in poverty"
    )
  ) %>% 
  ggplot(aes(value, f1_score)) +
  geom_jitter(alpha = 1/2, size = 1) +
  geom_smooth(method = "lm", size = 2, color = "black") +
  scale_y_continuous(breaks = seq.int(-2, 2, 1)) +
  theme_pubr() +
  theme(
    axis.text.x = element_text(size = 16, hjust = .1),
    axis.title.y = element_text(size = 20),
    axis.title.x = element_text(size = 22),
    axis.text.y = element_text(size = 16),
    strip.text = element_text(size = 18),
    legend.position = "none"
  ) +
  facet_wrap(.~variable, nrow = 1, scales = "free") +
  labs(
    x = "Percentile relative to other census tracts",
    y = "Objective COVID-19 adversity\n(estimated factor score)"
  ) +
  coord_cartesian(expand = FALSE)

ggsave(
  "~/Box/lucy_king_files/BABIES/cope/figures/f1_EN_comm_continuous_vars.jpeg",
  dpi = 1000,
  width = 17,
  height = 4
)
```

```{r}
# individual-level
cc2_preg_cal %>% 
  dplyr::select(
    mom_age,
    prenatal_complications,
    prenatal_support,
    access,
    f1_score
  ) %>% 
  gather(variable, value, -f1_score) %>% 
  mutate(
    variable = recode_factor(
      variable,
      "access" = "Environmental resources",
      "mom_age" = "Age",
      "prenatal_complications" = "Prenatal medical conditions",
      "prenatal_support" = "Support from prenatal care team"
    )
  ) %>% 
  ggplot(aes(value, f1_score)) +
  geom_jitter(alpha = 1/2, size = 1) +
  geom_smooth(method = "lm", size = 2, color = "black") +
  scale_y_continuous(breaks = seq.int(-2, 2, 1)) +
  theme_pubr() +
  theme(
    axis.text.x = element_text(size = 16, hjust = .1),
    axis.title.y = element_text(size = 20),
    axis.title.x = element_text(size = 22),
    axis.text.y = element_text(size = 16),
    strip.text = element_text(size = 18),
    legend.position = "none"
  ) +
  facet_wrap(.~variable, nrow = 1, scales = "free") +
  labs(
    x = "Value",
    y = "Objective COVID-19 adversity\n(estimated factor score)"
  ) +
  coord_cartesian(expand = TRUE)

ggsave(
  "~/Box/lucy_king_files/BABIES/cope/figures/f1_EN_indv_continuous_vars.jpeg",
  dpi = 1000,
  width = 17,
  height = 4
)
```

#### calculate zero-order effects
```{r}
library(DescTools)
## continuous variables
cor.test(cc2_preg_cal_en$f1_score, cc2_preg_cal_en$asthma_pctl)
cor.test(cc2_preg_cal_en$f1_score, cc2_preg_cal_en$linguistic_isolation_pctl)
cor.test(cc2_preg_cal_en$f1_score, cc2_preg_cal_en$low_birth_weight_pctl)
cor.test(cc2_preg_cal_en$f1_score, cc2_preg_cal_en$poverty_pctl)
cor.test(cc2_preg_cal_en$f1_score, cc2_preg_cal_en$mom_age)

SpearmanRho(cc2_preg_cal_en$f1_score, cc2_preg_cal_en$prenatal_complications, conf.level = .95)
SpearmanRho(cc2_preg_cal_en$f1_score, cc2_preg_cal_en$prenatal_support, conf.level = .95)
SpearmanRho(cc2_preg_cal_en$f1_score, cc2_preg_cal_en$access, conf.level = .95)

cc2_preg_cal_en <-
  cc2_preg_cal_en %>% 
  mutate(
    first_pregnancy_f = as.factor(first_pregnancy),
    immigrant_f = as.factor(immigrant),
    history_mh_disorder_f = as.factor(history_mh_disorder),
    race_poc_f = as.factor(race_poc_dummy),
    covid_high_risk_self_f = as.factor(covid_high_risk_self)
  )

cohens_d(cc2_preg_cal_en$f1_score, cc2_preg_cal_en$first_pregnancy_f)
cohens_d(cc2_preg_cal_en$f1_score, cc2_preg_cal_en$immigrant_f)
cohens_d(cc2_preg_cal_en$f1_score, cc2_preg_cal_en$history_mh_disorder_f)
```

#### F2

##### visualize zero-order effects

###### binary variables
```{r}
cc2_preg_cal %>% 
  dplyr::select(
    first_pregnancy,
    history_mh_disorder,
    race_poc,
    covid_high_risk_self,
    f2_score
  ) %>% 
  mutate(
    first_pregnancy = recode_factor(
      first_pregnancy,
      "1" = "Primiparous",
      "0" = "Multiparous"
    ),
    history_mh_disorder = recode_factor(
      history_mh_disorder,
      "1" = "Positive history",
      "0" = "No history"
    ),
    covid_high_risk_self = recode_factor(
      covid_high_risk_self,
      "1" = "High risk",
      "0" = "Not high risk"
    )
  ) %>% 
  gather(variable, value, -f2_score) %>% 
  mutate(
    variable = recode_factor(
      variable,
      "first_pregnancy" = "Parity",
      "history_mh_disorder" = "History of mood/anxiety disorder",
      "covid_high_risk_self" = "High risk for COVID-19",
      "race_poc" = "Person of color"
    ),
    value = factor(value)
  ) %>% 
  ggplot(aes(value, f2_score)) +
  geom_flat_violin(
    aes(fill = value),
    position = position_nudge(x = .21, y = 0), 
    adjust = 1.5, 
    trim = TRUE, 
    alpha = .65, 
    colour = NA
  ) +
  geom_boxplot(
    aes(x = value, y = f2_score, fill = value),
    outlier.shape = NA, 
    alpha = .65, 
    width = .4, 
    colour = "black"
  ) +
  scale_fill_npg() +
  theme_pubr() +
  theme(
    axis.text.x = element_text(size = 18, angle = 320, hjust = .1),
    axis.title.y = element_text(size = 20),
    axis.title.x = element_text(size = 22),
    axis.text.y = element_text(size = 16),
    strip.text = element_text(size = 18),
    legend.position = "none"
  ) +
  facet_wrap(.~variable, scales = "free", nrow = 1) +
  labs(
    x = NULL,
    y = "Subjective COVID-19 adversity\n(estimated factor score)"
  )

ggsave(
  "~/Box/lucy_king_files/BABIES/cope/figures/f2_EN_discrete_vars.jpeg",
  dpi = 1000,
  width = 17,
  height = 5
)
```

###### continuous variables
```{r}
# community-level
cc2_preg_cal %>% 
  dplyr::select(
    education_ce_pctl,
    linguistic_isolation_pctl,
    poverty_pctl,
    f2_score
  ) %>% 
  gather(variable, value, -f2_score) %>% 
  mutate(
    variable = recode_factor(
      variable,
      "education_ce_pctl" = "% low educational attainment",
      "linguistic_isolation_pctl" = "% limited English-speaking",
      "poverty_pctl" = "% in poverty"
    )
  ) %>% 
  ggplot(aes(value, f2_score)) +
  geom_jitter(alpha = 1/2, size = 1) +
  geom_smooth(method = "lm", size = 2, color = "black") +
  scale_y_continuous(breaks = seq.int(-2, 2, 1)) +
  theme_pubr() +
  theme(
    axis.text.x = element_text(size = 16, hjust = .1),
    axis.title.y = element_text(size = 20),
    axis.title.x = element_text(size = 22),
    axis.text.y = element_text(size = 16),
    strip.text = element_text(size = 18),
    legend.position = "none"
  ) +
  facet_wrap(.~variable, nrow = 1, scales = "free") +
  labs(
    x = "Percentile relative to other census tracts",
    y = "Subjective COVID-19 adversity\n(estimated factor score)"
  ) +
  coord_cartesian(expand = FALSE)

ggsave(
  "~/Box/lucy_king_files/BABIES/cope/figures/f2_EN_comm_continuous_vars.jpeg",
  dpi = 1000,
  width = 13,
  height = 4.5
)

```

```{r}
# individual-level
cc2_preg_cal %>% 
  dplyr::select(
    mom_age,
    prenatal_complications,
    prenatal_support,
    access,
    social_supp_change,
    f2_score
  ) %>% 
  gather(variable, value, -f2_score) %>% 
  mutate(
    variable = recode_factor(
      variable,
      "access" = "Environmental resources",
      "mom_age" = "Age",
      "prenatal_complications" = "Prenatal med. conditions",
      "prenatal_support" = "Support from care team",
      "social_supp_change" = "Change in social support"
    )
  ) %>% 
  ggplot(aes(value, f2_score)) +
  geom_jitter(alpha = 1/2, size = 1) +
  geom_smooth(method = "lm", size = 2, color = "black") +
  scale_y_continuous(breaks = seq.int(-2, 2, 1)) +
  theme_pubr() +
  theme(
    axis.text.x = element_text(size = 16, hjust = .1),
    axis.title.y = element_text(size = 20),
    axis.title.x = element_text(size = 22),
    axis.text.y = element_text(size = 16),
    strip.text = element_text(size = 18),
    legend.position = "none"
  ) +
  facet_wrap(.~variable, nrow = 1, scales = "free") +
  labs(
    x = "Value",
    y = "Subjective COVID-19 adversity\n(estimated factor score)"
  ) +
  coord_cartesian(expand = TRUE)

ggsave(
  "~/Box/lucy_king_files/BABIES/cope/figures/f2_EN_indv_continuous_vars.jpeg",
  dpi = 1000,
  width = 17,
  height = 4
)
```

#### calculate zero-order effects
```{r}
# continuous variables
cor.test(cc2_preg_cal_en$f2_score, cc2_preg_cal_en$education_ce_pctl)
cor.test(cc2_preg_cal_en$f2_score, cc2_preg_cal_en$linguistic_isolation_pctl)
cor.test(cc2_preg_cal_en$f2_score, cc2_preg_cal_en$poverty_pctl)
cor.test(cc2_preg_cal_en$f2_score, cc2_preg_cal_en$mom_age)
cor.test(cc2_preg_cal_en$f2_score, cc2_preg_cal_en$social_supp_change)

SpearmanRho(cc2_preg_cal_en$f2_score, cc2_preg_cal_en$prenatal_complications, conf.level = .95)
SpearmanRho(cc2_preg_cal_en$f2_score, cc2_preg_cal_en$prenatal_support, conf.level = .95)
SpearmanRho(cc2_preg_cal_en$f2_score, cc2_preg_cal_en$access, conf.level = .95)

# discrete variables
cohens_d(cc2_preg_cal_en$f2_score, cc2_preg_cal_en$first_pregnancy_f)
cohens_d(cc2_preg_cal_en$f2_score, cc2_preg_cal_en$history_mh_disorder_f)
cohens_d(cc2_preg_cal_en$f2_score, cc2_preg_cal_en$covid_high_risk_self_f)
cohens_d(cc2_preg_cal_en$f2_score, cc2_preg_cal_en$race_poc_f)
```

# Aim 4

## OLS in full pregnancy sample
```{r}
cor.test(cc2_preg$f1_score, cc2_preg$epds_total, method = "pearson")

epds_lm <-
  lm(
    scale(epds_total) ~
      scale(f1_score) +
      scale(f2_score),
    data = cc2_preg
  )

summary(epds_lm)
model_parameters(epds_lm, bootstrap = TRUE)
calc.relimp(epds_lm)
```

## OLS in California addressed sample
```{r}
epds_lm_cal <-
  lm(
    scale(epds_total) ~
      scale(f1_score) +
      scale(f2_score),
    data = cc2_preg_cal
  )

summary(epds_lm_cal)
model_parameters(epds_lm_cal, bootstrap = TRUE)
model_performance(epds_lm_cal)
```

## Visualize effects of factor scores on EPDS in full sample
```{r}
cc2_preg %>% 
  dplyr::select(
    f1_score,
    f2_score,
    epds_total
  ) %>% 
  gather(factor, score, -epds_total) %>% 
  mutate(
    factor = dplyr::recode(
      factor,
      "f1_score" = "Objective COVID-19 adversity",
      "f2_score" = "Subjective COVID-19 stress"
    )
  ) %>% 
  ggplot(aes(score, epds_total)) +
  geom_point(alpha = 1/2, size = 1.5) +
  geom_smooth(method = "lm", size = 2.5, color = "black") +
  theme_pubr() +
  theme(
    strip.text = element_text(size = 18),
    axis.title.y = element_text(size = 20),
    axis.title.x = element_text(size = 20),
    axis.text.y = element_text(size = 16),
    axis.text.x = element_text(size = 16),
    # remove legend
    legend.position = "none"
  ) +
  facet_grid(.~factor) +
  labs(
    #title = "R-squared = 0.19",
    x = "Esimated factor score",
    y = "Prenatal depressive symptoms\n(EPDS)"
  ) 

ggsave(
  "~/Box/lucy_king_files/BABIES/cope/figures/fscores_epds.png",
  width = 10,
  height = 5,
  dpi = 1000
)
```

## Elastic net with EFA items

### Prepare data

```{r}
cc2_preg_epds_en <-
 cc2_preg %>% 
  dplyr::select(
    epds_total,
    prenatal_care_changes,
    preg_birth_concern_rating,
    preg_supp_concern_rating,
    mat_care_concern_rating,
    child_health_concern_rating,
    covid_self_distress,
    covid_family_distress,
    curr_finance_impacts,
    fut_finance_impacts,
    social_disruptions_rating,
    reduced_access_distress,
    impact_covid_rating,
    impact_covid_valence
  ) %>% 
  mutate_at(
    vars(prenatal_care_changes:impact_covid_valence),
    funs(z_score)
  ) %>% 
  mutate_all(
    as.numeric
  ) %>% 
  na.omit()
```

```{r}
stress_predictors <- 
  cc2_preg_epds_en %>% 
  dplyr::select(-epds_total) %>% 
  as.matrix()

epds_score <- z_score(cc2_preg_epds_en$epds_total)
```

### Run model over 100 increasingly relaxed lambda values

```{r}
fit_net_cope_epds <- glmnet(stress_predictors, epds_score, family = "gaussian", standardize = FALSE)
plot(fit_net_cope_epds, label = TRUE)
```

### Run leave-one-out cross validation to identify optimal lambda value

```{r}
k_stress <- nrow(cc2_preg_epds_en)
```

```{r}
# run cross validation
fit_cv_epds <- cv.glmnet(
    x = stress_predictors, 
    y = epds_score, 
    type.measure = "mse", 
    family = "gaussian", 
    alpha = .5,
    nfolds = k_stress,
    grouped = FALSE,
    standardize = FALSE
  )

lambda_epds <- fit_cv_epds$lambda.min
```

### Calculate EN model performance

```{r}
# save model matrix
cc2_preg_epds_en_mod_matrix <-
  cc2_preg_epds_en %>% 
  dplyr::select(-epds_total)

x_epds <- model.matrix(epds_score ~ ., cc2_preg_epds_en_mod_matrix)[,-1]

# get predicted values
y_hat_epds <- predict(fit_cv_epds,  newx = x_epds,  s = "lambda.min")

r_sq_epds <- 1 - (sum((epds_score - y_hat_epds)^2) / sum((epds_score - mean(epds_score))^2))

r_sq_epds
pretty_sq_epds <- round(r_sq_epds, 2)
```

## Print coefficients for model with optimal lambda 

```{r}
fit_net_final_epds <- glmnet(
  stress_predictors, 
  epds_score, 
  family = "gaussian", 
  alpha = .5, 
  lambda = lambda_epds
)
coefs_epds <- coef(fit_net_final_epds) 
coefs_epds
```
    
```{r}
en_coef_tbl_epds <- 
  tidy(coef(fit_net_final_epds))  %>% 
  dplyr::select(-column) %>% 
  filter(row != "(Intercept)") %>% 
  mutate(
    Factor = dplyr::recode(
      row,
      prenatal_care_changes	= "Objective adversity",
      preg_supp_concern_rating = "Subjective stress",
      covid_self_distress	=  "Subjective stress",
      covid_family_distress	= "Subjective stress",
      curr_finance_impacts = "Objective adversity",
      social_disruptions_rating = "Subjective stress",
      reduced_access_distress = "Subjective stress",	
      impact_covid_rating = "Subjective stress",		
      impact_covid_valence = "Subjective stress",	
    ),
    Variable = dplyr::recode(
      row,
      prenatal_care_changes	= "Changes to prenatal care",
      preg_supp_concern_rating = "Concern for birth social support",	
      covid_self_distress	=  "Distress due to own illness",		
      covid_family_distress	= "Distress due to family illness",
      curr_finance_impacts = "Current employment/financial impacts",
      social_disruptions_rating = "Distress due to social disurptions",	
      reduced_access_distress = "Distress due to reduced access",		
      impact_covid_rating = "Overall impact to daily life",			
      impact_covid_valence = "Valence of overall impact"
    )
  ) %>% 
  dplyr::select(
    Variable, 
    Factor,
    `Elastic net estimate` = value
  )

en_coef_tbl_epds
```

```{r fig.height=6, fig.width=11}
en_coef_tbl_epds %>% 
  ggplot(
    aes(
      fct_reorder(Variable, `Elastic net estimate`), 
      `Elastic net estimate`, 
      fill = Factor
    )
  )+
  geom_col() +
  scale_y_continuous(breaks = seq.int(-.20, .20, .05)) +
  scale_fill_jama() +
  theme_pubclean() +
  theme(
    axis.title = element_text(size = 18),
    axis.text = element_text(size = 16),
    legend.text = element_text(size = 16),
    plot.title = element_text(size = 17),
  ) +
  coord_flip() +
  labs(
    x = NULL,
    fill = NULL,
    y = "Prenatal depressive symptoms (EPDS)\nelastic net estimate"
  )

ggsave(
  "~/Box/lucy_king_files/BABIES/cope/figures/en_epds_20201112.png",
  height = 6,
  width = 11
)
```

### Zero-order effects

#### visualize zero-order effects

```{r}
cc2_preg %>% 
  dplyr::select(
    `Changes to prenatal care` = prenatal_care_changes,
    `Concern for birth social support` = preg_supp_concern_rating ,
    `Distress due to own illness` = covid_self_distress,
    `Distress due to family illness` = covid_family_distress,
    `Current financial impacts` = curr_finance_impacts,
    `Distress due to social disrupt.` = social_disruptions_rating,
    `Distress due to reduced access` =  reduced_access_distress,	
    `Overall impact to daily life` = impact_covid_rating,	
    `Valence of overall impact` = impact_covid_valence,
    epds_total
  ) %>% 
  gather(variable, value, -epds_total) %>% 
  ggplot(aes(value, epds_total)) +
  geom_jitter(alpha = 1/2, size = 1) +
  geom_smooth(method = "lm", size = 2, color = "black") +
  theme_pubr() +
  theme(
    axis.text.x = element_text(size = 16, hjust = .1),
    axis.title.y = element_text(size = 22),
    axis.title.x = element_text(size = 22),
    axis.text.y = element_text(size = 16),
    strip.text = element_text(size = 18),
    legend.position = "none"
  ) +
  facet_wrap(.~variable, nrow = 3, scales = "free") +
  labs(
    x = "Value",
    y = "Prenatal depressive symptoms\n(EPDS)"
  ) +
  coord_cartesian(expand = TRUE)

ggsave(
  "~/Box/lucy_king_files/BABIES/cope/figures/epds_EN_stress_vars.jpeg",
  dpi = 1000,
  width = 12.5,
  height = 12
)
```

#### calculate zero-order effects
```{r}
SpearmanRho(cc2_preg$epds_total, cc2_preg$prenatal_care_changes, use = "pairwise.complete.obs", conf.level = .95)
SpearmanRho(cc2_preg$epds_total, cc2_preg$preg_supp_concern_rating, use = "pairwise.complete.obs", conf.level = .95)
SpearmanRho(cc2_preg$epds_total, cc2_preg$curr_finance_impacts, use = "pairwise.complete.obs", conf.level = .95)
SpearmanRho(cc2_preg$epds_total, cc2_preg$covid_family_distress, use = "pairwise.complete.obs", conf.level = .95)
SpearmanRho(cc2_preg$epds_total, cc2_preg$covid_self_distress, use = "pairwise.complete.obs", conf.level = .95)
SpearmanRho(cc2_preg$epds_total, cc2_preg$social_disruptions_rating, use = "pairwise.complete.obs", conf.level = .95)
SpearmanRho(cc2_preg$epds_total, cc2_preg$impact_covid_rating, use = "pairwise.complete.obs", conf.level = .95)
SpearmanRho(cc2_preg$epds_total, cc2_preg$impact_covid_valence, use = "pairwise.complete.obs", conf.level = .95)

cor.test(cc2_preg$epds_total, cc2_preg$reduced_access_distress)
```

# Additional analyses by reviewer request

## Gestational weeks and stress and adversity
```{r}
cor.test(cc2_preg$f1_score, cc2_preg$gestational_weeks)
cor.test(cc2_preg$f2_score, cc2_preg$gestational_weeks)
```

## Aim 4 by phases of pregnancy
```{r}
max_gestational_weeks <- max(cc2_preg$gestational_weeks, na.rm = TRUE)

cc2_preg <-
  cc2_preg %>% 
  mutate(
    trimester = as.factor(
      case_when(
        gestational_weeks < 14 ~ "first",
        gestational_weeks >= 14 & gestational_weeks < 26 ~ "second",
        gestational_weeks >= 16 & gestational_weeks <= max_gestational_weeks ~ "third",
      )
    ),
    pregnancy_stage = as.factor(
      case_when(
        gestational_weeks <= 20 ~ "earlier", 
        gestational_weeks > 20 & gestational_weeks <= max_gestational_weeks ~ "later"
      )
    )
  )

cc2_preg %>% 
  count(trimester)

cc2_preg %>% 
  count(pregnancy_stage)
```

```{r}
cc2_preg_earlier <-
  cc2_preg %>% 
  filter(pregnancy_stage == "earlier")

epds_lm_earlier <-
  lm(
    scale(epds_total) ~
      scale(f1_score) +
      scale(f2_score),
    data = cc2_preg_earlier
  )

summary(epds_lm_earlier)
model_parameters(epds_lm_earlier, bootstrap = TRUE)
calc.relimp(epds_lm_earlier)
```

```{r}
cc2_preg_later <-
  cc2_preg %>% 
  filter(pregnancy_stage == "later")

epds_lm_later <-
  lm(
    scale(epds_total) ~
      scale(f1_score) +
      scale(f2_score),
    data = cc2_preg_later
  )

summary(epds_lm_later)
model_parameters(epds_lm_later, bootstrap = TRUE)
calc.relimp(epds_lm_later)
```

# Export data for sharing
```{r}
cc2_preg_share <-
  cc2_preg %>% 
  dplyr::select(
    cope_id,
    matched_subset,
    ca_county,
    state_current_ca,
    census_tract,
    mom_age,
    gestational_weeks,
    ppl_in_home_allchild,
    ppl_in_home_adults,
    inr_fpl,
    income,
    education,
    job_status,
    first_pregnancy,
    race_c,
    marriage_status,
    past_mh_sa_treatment,
    self_test,
    prenatal_care_changes,
    curr_finance_impacts,
    fut_finance_impacts,
    covid_restrictions,
    preg_birth_concern_rating,
    preg_supp_concern_rating,
    mat_care_concern_rating,
    child_health_concern_rating,
    covid_self_distress,
    covid_family_distress,
    current_job_distress,
    future_job_distress,
    reduced_access_distress,
    impact_covid_rating,
    impact_covid_valence,
    covid_confirmed_number,
    covid_positive_contacts,
    f1_score,
    f2_score,
    race_poc,
    covid_high_risk_self,
    first_pregnancy,
    history_mh_disorder,
    pregnancy_loss_d,
    education,
    job_status_d,
    medical_history_d,
    home_multi,
    immigrant,
    asthma_pctl,
    low_birth_weight_pctl,
    cardio_disease_pctl,
    education_ce_pctl,
    poverty_pctl,
    housing_burden_pctl,
    linguistic_isolation_pctl,
    unemployment_ce_pctl,
    inr_fpl,
    prenatal_complications,
    prenatal_support,
    social_disruptions_rating,
    current_social_supp_rating,
    prior_social_supp_rating,
    social_supp_change,
    access,
    matched_subset,
    epds_total
  )

var_label(cc2_preg_share) <- 
  list(
    cope_id = "Participant ID number",
    matched_subset = "Is participant in sample matched to pre-pandemic sample?",
    ca_county = "CA county in which participant resides (available if provided full address)",
    state_current_ca = "Does participant live in CA?",
    census_tract = "Census tract code if participant provided full address",
    mom_age = "Participant's age",
    gestational_weeks = "Gestionational weeks into pregnancy (calculated based on due date)",
    ppl_in_home_allchild = "Total number of child in household",
    ppl_in_home_adults = "Total number of adults in household",
    inr_fpl = "Income-to-needs ratio based on federal poverty line",
    income = "Self-reported income",
    education = "Self-reported level of education",
    job_status = "Self-reported employment status",
    first_pregnancy = "Is this the participant's first pregnancy?",
    race_c = "Participant's self-reported race",
    marriage_status = "Participant's marital status",
    past_mh_sa_treatment = "Did participant receive treatment for mental health difficulties or substance abuse in the past",
    self_test = "Has the participant tested positive for COVID-19?",
    prenatal_care_changes = "The number of changes to prenatal care due to COVID-19",
    curr_finance_impacts = "The number of impacts to employment or finances for self or partner due to COVID-19",
    fut_finance_impacts = "The number of expected impacts to employment or finances for self or partner due to COVID-19",
    covid_restrictions = "Number of restrictions (e.g., quarantine) due to suspected or confirmed COVID-19 exposure or infection",
    preg_birth_concern_rating = "How concerned are you about possible future changes to your medical care during your baby's birth as a result of the COVID-19 outbreak?",
    preg_supp_concern_rating = "How concerned are you about possible future changes in support/involvement of your family and friends in your baby's birth as a result of the COVID-19 outbreak?",
    mat_care_concern_rating = "How concerned are you about any possible future changes to how you will care for your baby as a result of the COVID-19 outbreak?",
    child_health_concern_rating = "How concerned are you about  your child's health as a result of the COVID-19 outbreak?",
    covid_self_distress = "How distressed are you about your own COVID-19 related symptoms or potential illness?",
    covid_family_distress = "How distressed are you about COVID-19 related
symptoms or potential illness in friends and family?",
    current_job_distress = "What is the level of distress you have experienced relating to employment and finnancial impacts due to the COVID-19 outbreak?",
    future_job_distress = "What is the level of distress you have about FUTURE employment and finnancial impacts of the COVID-19 outbreak?",
    reduced_access_distress = "Mean of reported distress related to reduced access to food/goods, medicine/hygiene supplies, baby supplies, mental healthcare, general healthcare, social interactions",
    impact_covid_rating = "Overall level of impact to your daily life due to the COVID-19
outbreak",
    impact_covid_valence = "Extent to which you view the COVID-19 as having either a positive or negative impact on your life",
    social_disruptions_rating = "What is the level of distress you have experienced
with disruptions to your social support due to COVID-19?",
    covid_confirmed_number = "Number of people you know with CONFIRMED cases of COVID-19",
    covid_positive_contacts = "Number of people you know with SUSPECTED cases of COVID-19",
    f1_score = "Factor 1 estimate factor score estimate (objective COVID-19 adversity)",
    f2_score = "Factor 2 estimate factor score estimate (subjective COVID-19 stress)",
    race_poc = "Does the participant identify as a person of color?",
    covid_high_risk_self = "Is participant at higher risk for contracting COVID-19 due to an existing medical condition?",
    history_mh_disorder = "Does the participant have a history of a mood or anxiety disorder?",
    pregnancy_loss_d = "Has the participant lost a previous pregnancy (i.e., miscarriage, abortion)?",
    job_status_d = "Is the participant employed for wages?",
    medical_history_d = "Does the participant have a medical condition? (excluded prenatal conditions)",
    home_multi = "Does participant live in a house with more than 1 bedroom?",
    immigrant = "Is the participant an immigrant to the U.S.?",
    asthma_pctl = "CalEnviro variable: rate of emergency room (ER) visits for asthma per 10,000 people",
    low_birth_weight_pctl = "CalEnviro variable: % births of low weight infants in population",
    cardio_disease_pctl = "CalEnviro variable: rate of ER visits for heart attacks per 10,000 people",
    education_ce_pctl = "CalEnviro variable = % of population > age 25 years with < high school education",
    poverty_pctl = "CalEnviro variable = % of population with income < twice the federal poverty line",
    housing_burden_pctl = "CalEnviro variable = % of population that is both low income and paying > 50% of income for housing",
    linguistic_isolation_pctl = "CalEnviro variable = % limited English-speaking households",
    unemployment_ce_pctl = "CalEnviron variable = % of population > age 16 years, eligible for workforce, and unemployed",
    prenatal_complications = "Number of prenatal medical conditions",
    prenatal_support = "How well are you currently being supported by your primary prenatal care provider(s)?",
    current_social_supp_rating = "Currently, how supported do you feel by your social network?",
    prior_social_supp_rating = "Prior to COVID-19, how supported did you feel by your social network?",
    social_supp_change = "current_social_supp_rating - prior_social_supp_rating",
    access = "Number of environmental resources to which participant has access (phone, internet connected computer, quite place in home, private outdoor space, public outdoor space)",
    epds_total = "Total score on Edinbirgh Postnatal Depression Scale"
  )

metadata(cc2_preg_share)$name <- "Analysed data for \"Analysed data for Aims 2-4 of \"Pregnancy during the pandemic\\: The impact of COVID-19-related stress on risk for prenatal depression\" (King et al. 2020)"

cc2_preg_share <-
  cc2_preg_share %>% 
  mutate(
    git_id = 1:725
  ) %>% 
  dplyr::select(git_id, everything(), -cope_id)

write_csv(
  cc2_preg_share,
  "~/Desktop/BABIES/COPE/cope_git/analyzed_data_Aims2-4.csv"
)
```

