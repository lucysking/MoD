---
title: "Clean and Wrangle COPE Data"
author: "Lucy King"
date: "11/13/2020"
output: html_document
---

# Environment
```{r}
library(tidyverse)
library(lubridate)
library(psych)
library(purrr)

cope_engish_file <- "~/Box/Mooddata_Coordinating/COPE/data/raw_data/cope_data_english.csv"
cope_spanish_file <- "~/Box/Mooddata_Coordinating/COPE/data/raw_data/cope_data_spanish.csv"

ders_epds_english_file <- "~/Box/Mooddata_Coordinating/COPE/data/raw_data/cope_ders_epds_english.csv"
ders_epds_spanish_file <- "~/Box/Mooddata_Coordinating/COPE/data/raw_data/cope_ders_epds_spanish.csv"

geocoded_file <- "~/Box/Mooddata_Coordinating/COPE/data/geocoded_addresses_census_tracts_20201110.csv"

plot_histogram <- function(data, x) {
  x = sym(x)
  
  ggplot(data, aes(!!x)) +
    geom_histogram(binwidth = 1)
}
```

## English
```{r}
c <-
  read_csv(cope_engish_file)
```

```{r}
ed <-
  read_csv(ders_epds_english_file) 
```

```{r}
c <-
  c %>% 
  rename(
    race_other_describe = race_other,
    preg_complications_other_describe = preg_complications_other, # P
    mom_preg_complications_other_describe = mom_preg_complications_other, # M
    job_type_other_describe = job_type_other
  ) %>% 
  dplyr::select(
    cope_id,
    today_date,
    address_current,
    # variables not included in stress/adversity 
    currently_pregnant,
    pregnant_due_date,
    currently_mother,
    child_birth_date,
    current_child_age,
    birth_date = birth_date,
    education = education,
    marriage_status,
    marriage_status_other,
    household_partner,
    household_partner_time,
    home_describe,
    home_rent_own,
    ppl_in_home_partner_d = ppl_in_home___1,
    ppl_in_home_infants_d = ppl_in_home___2,
    ppl_in_home_preschool_d = ppl_in_home___3,
    ppl_in_home_schoolage_d = ppl_in_home___4,
    ppl_in_home_mother = ppl_in_home___5,
    ppl_in_home_father = ppl_in_home___6,
    ppl_in_home_inlaws = ppl_in_home___7,
    ppl_in_home_roommate = ppl_in_home___8,
    ppl_in_home_otherfam = ppl_in_home___9,
    ppl_in_home_livealone = ppl_in_home___10,
    ppl_in_home_other = ppl_in_home___99,
    ppl_in_home_describe,
    ppl_in_home_infants:ppl_in_home_adults,
    country_birth = country_live, # this var incorrectly named in our survey
    state_birth = state,
    ethnicity,
    race_black = race___1,
    race_native_american = race___2,
    race_native_hawaiian = race___3,
    race_asian = race___4,
    race_hispanic = race___5,
    race_white = race___6,
    race_other = race___99,
    race_decline = race___97,
    race_other_describe,
    income,
    pregnant_times,
    given_birth,
    current_num_bio_children,
    first_pregnancy, # P = pregnant variable
    preg_diabetes = preg_complications___1, # P
    preg_hypertension = preg_complications___2, # P
    preg_shortcervix = preg_complications___3, # P
    preg_smallfetal = preg_complications___4, # P
    preg_complications_other = preg_complications___99, # P
    preg_complications_other_describe, #P
    preg_birth_concern, # P,
    preg_birth_concern_describe, # P
    preg_support_concern, # P
    preg_supp_concern_describe, # P
    preg_mat_care_concern, # P
    preg_mat_care_concern_describe, # P
    preg_child_health_concern, # P
    preg_child_health_concern_describe, # P
    mom_first_pregnancy, # M = mom variable
    mom_diabetes = mom_preg_complications___1, # P
    mom_hypertension = mom_preg_complications___2, # P
    mom_shortcervix = mom_preg_complications___3, # P
    mom_smallfetal = mom_preg_complications___4, # P
    birth_lowweight = mom_preg_complications___5, # P
    birth_premature = mom_preg_complications___6, # P
    birth_extreme_premature = mom_preg_complications___7, # M
    mom_preg_complications_other = mom_preg_complications___99, # M
    mom_preg_complications_other_describe, # M
    nicu, # M,
    breastfeed, # M,
    exclusive_breastfeed, # M
    mom_mat_care_concern, # M
    mom_mat_care_concern_describe, # M
    mom_child_health_concern = mom_child_care_concern, # M
    mom_child_health_concern_describe = mom_child_care_concern_describe, # M,
    job_fulltime = job_type___1,
    job_partime = job_type___2,
    job_looking = job_type___3,
    job_student = job_type___4,
    job_unemployed = job_type___5,
    job_homecaregiver = job_type___6,
    job_retired = job_type___7,
    job_other = job_type___99,
    job_decline = job_type___98,
    job_type_other_describe,
    prior_social_supp_rating,
    current_social_supp_rating,
    access_phone,
    access_computer,
    access_privacy,
    access_yard,
    access_park,
    source_stress_covid,
    prenatal_support,
    medical_self___1:medical_self___7,
    history_mh_disorder = medical_self___8,
    no_medical_history = medical_self___98,
    past_mh_treatment = treatment_any_past___1,
    past_sa_treatment = treatment_any_past___2,
    past_mh_concern = treatment_any_past___3,
    past_sa_concern = treatment_any_past___4,
    # variables considered for stress/adversity model
    prenatal_support_change, # P,
    prenatal_care_changes___1:prenatal_care_changes___10, # P
    preg_birth_concern_rating = preg_supp_concern_rating_2, # P
    preg_supp_concern_rating, # P
    preg_mat_care_concern_rating, # P,
    preg_child_health_concern_rating = preg_childhealth_concern_rate, # P,
    mom_care_support_change, # M
    birth_plan_changes___1:birth_plan_changes___99, # M
    postnatal_plan_changes___1:postnatal_plan_changes___99, # M
    birth_change_distress, # M
    mom_mat_care_concern_rating, # M
    mom_child_health_concern_rating = mom_child_care_concern_rating, # M
    self_symp:other_living_in_home_test,
    covid_pos_contact___1:covid_pos_contact___99,
    covid_high_risk___1:covid_high_risk___99,
    covid_confirmed_number,
    covid_self_distress,
    covid_family_distress = covid_family_distreess,
    current_job_move_remote___1:current_job_distress,
    fut_job_move_remote___1:future_job_distress,
    social_disruptions_rating,
    covid_restrictions___1:covid_restrictions___10,
    covid_behavior_restrictions___1:covid_behavior_restrictions___13,
    concern_food:concern_social,
    change_stress_rating:change_energy_rating,
    disrupted_social_rating:impact_covid_valence,
    # psychopathology
    ## BSI
    starts_with("bsi"),
    ## PTSD
    starts_with("ptsd")
  ) %>% 
  left_join(ed, by = "cope_id")
```

```{r}
# cleaning income variable separately in english and spanish datasets due to error in english dataset variable labels (missed 30k-40k bin)
c <-
  c %>% 
  mutate(
    income = dplyr::recode(
      income,
      "1" = "<$10k",
      "2" = "$10k-$20k",
      "3" = "$20k-$30k",
      "4" = "$40k-$50k",
      "5" = "$50k-$60k",
      "6" = "$60k-$80k",
      "7" = "$80k-$100k",
      "8" = "$100k-$120k",
      "9" = "$120k-$140k",
      "10" = "$140k-$160k",
      "11" = "$160k-$180k",
      "12" = "$180k-$200k",
      "13" = "$200k-$220k",
      "14" = "$220k-$250k",
      "15" = ">$250k"
    )
  )
```

## Spanish
```{r}
cs <-
  read_csv(cope_spanish_file) %>% 
  rename(
    cope_id = record_id
  )
```

```{r}
eds <-
  read_csv(ders_epds_spanish_file) %>% 
  rename(
    cope_id = record_id
  )
```

```{r}
cs <-
  cs %>% 
  rename(
    race_other_describe = race_other_s,
    preg_complications_other_describe = preg_complications_other_s, # P
    mom_preg_complications_other_describe = mom_preg_complications_other_s, # M
    job_type_other_describe = job_type_other_s
  ) %>% 
  dplyr::select(
    cope_id,
    today_date_s,
    address_current_s,
    # variables not included in stress/adversity model
    currently_pregnant_s,
    pregnant_due_date_s,
    currently_mother_s,
    child_birth_date_s,
    child_current_age = child_current_age_s,
    birth_date = birth_date_s,
    education = education_s,
    marriage_status_s,
    marriage_status_other_s,
    household_partner_s,
    household_partner_time_s,
    home_describe_s,
    home_rent_own_s,
    ppl_in_home_infants_s:ppl_in_home_adults_s,
    country_birth = country_live_s, # this var was incorrectly named in our survey
    state_birth = state_s,
    ethnicity_s,
    race_black = race_s___1,
    race_native_american = race_s___2,
    race_native_hawaiian = race_s___3,
    race_asian = race_s___4,
    race_hispanic = race_s___5,
    race_white = race_s___6,
    race_other = race_s___99,
    race_decline = race_s___8,
    race_other_describe,
    income_s,
    pregnant_times_s,
    given_birth_s,
    current_num_bio_children_s,
    first_pregnancy_s, # P = pregnant variable
    preg_diabetes = preg_complications_s___1, # P
    preg_hypertension = preg_complications_s___2, # P
    preg_shortcervix = preg_complications_s___3, # P
    preg_smallfetal = preg_complications_s___4, # P
    preg_complications_other = preg_complications_s___99, # P
    preg_complications_other_describe, # P
    preg_birth_concern_s, # P,
    preg_birth_concern_describe_s, # P
    preg_support_concern_s, # P
    preg_supp_concern_describe_s = preg_supp_concern_describe_0b15ec, # P
    #preg_mat_care_concern_s, # P not included in spanish survey (error)
    #preg_mat_care_concern_describe_s, # P not included in spanish survey (error)
    preg_child_health_concern_s, # P
    preg_child_health_concern_describe_s, # P
    mom_first_pregnancy_s, # M = mom variable
    mom_diabetes = mom_preg_complications_s___1, # P
    mom_hypertension = mom_preg_complications_s___2, # P
    mom_shortcervix = mom_preg_complications_s___3, # P
    mom_smallfetal = mom_preg_complications_s___4, # P
    birth_lowweight = mom_preg_complications_s___5, # P
    birth_premature = mom_preg_complications_s___6, # P
    birth_extreme_premature = mom_preg_complications_s___7, # P
    mom_preg_complications_other_describe, # P
    mom_complications_other = mom_preg_complications_s___99, # P
    nicu_s, # M,
    breastfeed_s, # M,
    exclusive_breastfeed_s, # M
    mom_mat_care_concern_s, # M
    mom_mat_care_concern_describe_s, # M
    mom_child_health_concern = mom_child_care_concern_s, # M
    mom_child_health_concern_describe = mom_child_care_concern_describe_s, # M,
    job_fulltime = job_type_s___1,
    job_partime = job_type_s___2,
    job_looking = job_type_s___3,
    job_student = job_type_s___4,
    job_unemployed = job_type_s___5,
    job_homecaregiver = job_type_s___6,
    job_retired = job_type_s___7,
    job_other = job_type_s___99,
    job_decline = job_type_s___8,
    job_type_other_describe, 
    prior_social_supp_rating_s,
    current_social_supp_rating_s,
    access_phone_s,
    access_computer_s,
    access_privacy_s,
    access_yard_s,
    access_park_s,
    source_stress_covid_s,
    prenatal_support_s,
    past_mh_treatment = treatment_any_past_s___1,
    past_sa_treatment = treatment_any_past_s___2,
    past_mh_concern = treatment_any_past_s___3,
    past_sa_concern = treatment_any_past_s___4,
    medical_self_s___1:medical_self_s___7,
    history_mh_disorder = medical_self_s___8,
    no_medical_history = medical_self_s___98,
    # variables considered in stress/adversity model
    prenatal_support_change_s, # P,
    prenatal_care_changes_s___1:prenatal_care_changes_s___10, # P
    preg_birth_concern_rating = preg_supp_concern_rating_2_s, # P
    preg_supp_concern_rating_s, # P
    mom_mat_care_concern_rating_s, # P,
    preg_child_health_concern_rating = preg_childhealth_concern_rate_s, # P,
    mom_care_support_change_s, # M
    birth_plan_changes_s___1:birth_plan_changes_s___99, # M
    postnatal_plan_changes_s___1:postnatal_plan_changes_s___99, # M
    birth_change_distress_s, # M
    mom_mat_care_concern_rating_s, # M
    mom_child_health_concern_rating = mom_child_care_concern_rating_s, # M
    self_symp_s:other_living_in_home_test_s,
    covid_pos_contact_s___1:covid_pos_contact_s___99,
    covid_high_risk_s___1:covid_high_risk_s___99,
    covid_confirmed_number_s,
    covid_self_distress_s,
    covid_family_distress = covid_family_distreess_s,
    current_job_move_remote_s___1:current_job_distress_s,
    fut_job_move_remote_s___1:future_job_distress_s,
    social_disruptions_rating_s,
    covid_restrictions_s___1:covid_restrictions_s___10,
    covid_behavior_restrictions_s___1:covid_behavior_restrictions_s___13,
    concern_food_s:concern_social_s,
    change_stress_rating_s:change_energy_rating_s,
    disrupted_social_rating_s:impact_covid_valence_s,
    # psychopathology
    ## BSI
    starts_with("bsi"),
    ## PTSD
    starts_with("ptsd")
  ) %>% 
  left_join(eds, by = "cope_id")
```

```{r}
#remove suffix so that variable names are same as in english language file
cs <-
  cs %>% 
  rename_all(
    list(~str_replace(., "_s$", ""))
  ) %>% 
  rename_all(
    list(~str_replace(., "_s_", "_"))
  )
```

```{r}
# cleaning income variable separately in english and spanish datasets due to error in english dataset variable labels (missed 30k-40k bin)
cs <-
  cs %>% 
  mutate(
    income = dplyr::recode(
      income,
      "1" = "<$10k",
      "2" = "$10k-$20k",
      "3" = "$20k-$30k",
      "4" = "$30k-$40k",
      "5" = "$40k-$50k",
      "6" = "$50k-$60k",
      "7" = "$60k-$80k",
      "8" = "$80k-$100k",
      "9" = "$100k-$120k",
      "10" = "$120k-$140k",
      "11" = "$140k-$160k",
      "12" = "$160k-$180k",
      "13" = "$180k-$200k",
      "14" = "$200k-$220k",
      "15" = "$220k-$250k",
      "16" = ">$250k"
    )
  )
```

# Join English and Spanish data

## Clean up data entry irregularities to allow joining
```{r}
c <-
  c %>% 
  mutate(
    ppl_in_home_allchild = case_when(
      ppl_in_home_allchild == "0 - one on the way" ~ 0,
      ppl_in_home_allchild == "2 and pregnant with twins" ~ 2,
      ppl_in_home_allchild == "Currently o but soon 1" ~ 0,
      ppl_in_home_allchild == "O" ~ 0,
      ppl_in_home_allchild == "One" ~ 1,
      ppl_in_home_allchild == "P" ~ 0, # assuming type for "O", i.e., 0
      ppl_in_home_allchild == "Two" ~ 2,
      TRUE ~ as.numeric(ppl_in_home_allchild)
    ),
    ppl_in_home_adults = case_when(
      ppl_in_home_adults == "Two" ~ 2,
      ppl_in_home_adults == "Four" ~ 4,
      ppl_in_home_adults == "W" ~ NA_real_, #typo; can't determine whether 2 or 3
      TRUE ~ as.numeric(ppl_in_home_adults)
    ),
    given_birth = case_when(
      given_birth == "1 but soon 2" ~ 1,
      given_birth == "2soontobe3" ~ 2,
      given_birth == "Due next week" ~ 0,
      given_birth == "First pregnancy" ~ 0,
      given_birth == "First tine" ~ 0,
      given_birth == "O" ~ 0,
      given_birth == "Two" ~ 2,
      TRUE ~ as.numeric(given_birth)
    ),
    current_num_bio_children = case_when(
      current_num_bio_children == "0 (currently pregnant)" ~ 0,
      current_num_bio_children == "1 but soon 2" ~ 1,
      current_num_bio_children == "2soontobe3" ~ 2,
      current_num_bio_children == "First pregnancy" ~ 0,
      current_num_bio_children == "None yet" ~ 0,
      current_num_bio_children == "O" ~ 0,
      current_num_bio_children == "One on the way" ~ 0,
      current_num_bio_children == "Two" ~ 2,
      TRUE ~ as.numeric(current_num_bio_children)
    )
  ) 
```

# Merge datasets
```{r}
# identify duplicates; extra empty rows; will remove with distinct()
c$dup_id <- duplicated(c$cope_id)
c %>% 
  filter(dup_id == TRUE)

cs$dup_id <- duplicated(cs$cope_id)

cs %>% 
  filter(dup_id == TRUE)

cc <-
  c %>% 
  bind_rows(cs) %>% 
  dplyr::select(-dup_id) %>% 
  distinct(cope_id, .keep_all = TRUE)
```
  
# Score psychopathology measures

On redcap BSI and PTSD variables were assigned on scale of 1-5; proper scale is 0-4; recode.
For EPDS, reverse score items 3 and 5-10
DERS items were coded correctly in redcap; no need to reverse score here. 

For all scales, taking the mean and then multiplying by the number of items in the scale in order to impute values for those who skipped questions.

```{r}
cc_bsi_vars <-
  cc %>% 
  filter(!is.na(education)) %>% 
  dplyr::select(starts_with("bsi"))

sapply(cc_bsi_vars, function(x) sum(is.na(x)))

cc_epds_vars <-
  cc %>% 
  filter(!is.na(education)) %>% 
  dplyr::select(starts_with("epds"))

sapply(cc_epds_vars, function(x) sum(is.na(x)))

cc_epds_vars <-
  cc %>% 
  filter(!is.na(education)) %>% 
  dplyr::select(starts_with("epds"))

sapply(cc_epds_vars, function(x) sum(is.na(x)))

cc_ders_vars <-
  cc %>% 
  filter(!is.na(education)) %>% 
  dplyr::select(starts_with("ders"))

sapply(cc_ders_vars, function(x) sum(is.na(x)))
```

```{r}
cc <-
  cc %>% 
  mutate_at(
    vars(bsi_faint_dizzy:bsi_fearful, ptsd_alert:ptsd_risks),
    list(
      . %>% 
        dplyr::recode(
          "1" = 0,
          "2" = 1,
          "3" = 2,
          "4" = 3,
          "5" = 4
        )
    )
  ) %>% 
  mutate_at(
    vars(epds_3, epds_5:epds_10), 
    list( 
      . %>%
        dplyr::recode(
          "3" = 0, 
          "2" = 1, 
          "1" = 2, 
          "0" = 3
        ) 
    )
  )

cc <-
  cc %>% 
  mutate(
     bsi_missing = pmap_dbl(
      select(., c(bsi_faint_dizzy:bsi_fearful)), 
      function(...) sum(is.na(c(...)), na.rm = TRUE)
    ),
    bsi_total =  pmap_dbl(
      select(., c(bsi_faint_dizzy:bsi_fearful)), 
      function(...) mean(c(...), na.rm = TRUE)
    ) * 17,
    # if missing more than 2 questions, total should be missing
    bsi_total = if_else(
      bsi_missing > 2, NA_real_, bsi_total
    ),
    ptsd_missing = pmap_dbl(
      select(., c(ptsd_alert:ptsd_risks)), 
      function(...) sum(is.na(c(...)), na.rm = TRUE)
    ),
     ptsd_total =  pmap_dbl(
      select(., c(ptsd_alert:ptsd_risks)), 
      function(...) mean(c(...), na.rm = TRUE)
    ) * 10,
    # if missing more than 1 question, total should be missing
    ptsd_total = if_else(
      ptsd_missing > 1, NA_real_, ptsd_total
    ),
    # for EPDS and DERS, anyone who completed, completed all items
     epds_total =  pmap_dbl(
      select(., c(epds_1:epds_10)), 
      function(...) mean(c(...), na.rm = TRUE)
    ) * 10,
    ders_total = pmap_dbl(
      select(., c(ders_1:ders_36)), 
      function(...) mean(c(...), na.rm = TRUE)
    ) * 36,
    ders_nonaccept = pmap_dbl(
      select(., c(ders_11, ders_12, ders_21, ders_23, ders_25, ders_29)),
      function(...) mean(c(...), na.rm = TRUE)
    ) * 6,
    ders_goals = pmap_dbl(
      select(., c(ders_13, ders_18, ders_20, ders_26, ders_33)),
      function(...) mean(c(...), na.rm = TRUE)
    ) * 5,
    ders_impulse = pmap_dbl(
      select(., c(ders_3, ders_14, ders_19, ders_24, ders_27, ders_32)),
      function(...) mean(c(...), na.rm = TRUE)
    ) * 6,
    ders_awareness = pmap_dbl(
      select(., c(ders_2, ders_6, ders_8, ders_10, ders_17, ders_34)),
      function(...) mean(c(...), na.rm = TRUE)
    ) * 6,
    ders_strategies = pmap_dbl(
      select(., c(ders_15, ders_16, ders_22, ders_28, ders_30, ders_31, ders_35, ders_36)),
      function(...) mean(c(...), na.rm = TRUE)
    ) * 8, 
    ders_clarity = pmap_dbl(
      select(., c(ders_1, ders_4, ders_5, ders_7, ders_9)),
      function(...) mean(c(...), na.rm = TRUE)
    ) * 5
  ) 
```

## Reliability for full sample
```{r}
cc %>% 
  dplyr::select(bsi_faint_dizzy:bsi_fearful) %>% 
  psych::alpha()

cc %>% 
  dplyr::select(ptsd_alert:ptsd_risks) %>% 
  psych::alpha()

cc %>% 
  dplyr::select(epds_1:epds_10) %>% 
  psych::alpha()
```

# Data cleaning

## Filter to only include eligible women
A total of 1,994 women responded. Of these, 1,595 were either currently pregnant (N=1058) or had an infant <= 6 months old (N=537). Of these, 1,046 completed the suvery (N=725 pregnant; N = 331 mothers of infants).
```{r}
cc <-
  cc %>% 
  mutate(
    preg_v_postnatal = case_when(
      currently_pregnant == 1 ~ "currently pregnant",
      currently_mother == 1 ~ "mother of infant"
    )
  ) %>% 
  # include only women who are currently pregnant or mothers of infants (other women not eligible)
  filter(!is.na(preg_v_postnatal))
```

## Filter to include only women who proceeded with the survey
```{r}
cc <-
  cc %>% 
  filter(!is.na(education))
```

```{r}
cc %>% 
  count(preg_v_postnatal)
```
```{r}
cc %>% 
  count(pregnant_times)
```


## Clean dates and ages
```{r}
cc <-
  cc %>% 
  mutate(
    # clean text entries and "0" entries for number of pregnancies
    pregnant_times = case_when(
      pregnant_times == "0" ~ 1, # these individuals didn't count their current pregnancy
      pregnant_times == "1 (including this)" ~ 1,
      pregnant_times == "1 (now)" ~ 1,
      pregnant_times == "2 (including this time)" ~ 2,
      pregnant_times == "2 (this is my second)" ~ 2,
      pregnant_times == "7+" ~ 7,
      pregnant_times == "First time" ~ 1,
      pregnant_times == "Primera vez" ~ 1,
      pregnant_times == "This is the first" ~ 1,
      pregnant_times == "Two" ~ 2,
      TRUE ~ as.numeric(pregnant_times)
    ),
    # one participant reported a due date in 2018; assuming this is 2020
    pregnant_due_date = if_else(
      pregnant_due_date == date("2018-05-23"), date("2020-05-23"), pregnant_due_date
    ),
    # one participant reported a birth year of ""2981"; assuming this is 1981
    birth_date = if_else(
      birth_date == date("2981-02-15"), date("1981-02-15"), birth_date
    ),
    # one participant report today's year as "2019"; correcting to "2020",
    today_date = if_else(
      today_date == date("2019-04-13"), date("2020-04-13"), today_date
    ),
    mom_age = (birth_date %--% today_date) / years(1),
    # removing age values for women who incorrectly reported their birth year as "2020"
    mom_age = if_else(
      mom_age < 18, NA_real_, mom_age  
    ),
    conception_date = pregnant_due_date - weeks(40),
    gestational_weeks = (conception_date %--% today_date) / weeks(1),
  )
```

## Clean additional ordinal/nominal/character variables
```{r}
cc <-
  cc %>% 
  group_by(cope_id) %>% 
  mutate(
    country_birth = str_to_upper(country_birth),
    country_birth = case_when(
      country_birth == "ALAMEDA" ~ "USA",
      country_birth == "ALMEDA" ~ "USA",
      country_birth == "AMERICA" ~ "USA",
      country_birth == "FRESNO" ~ "USA",
      country_birth == "LA" ~ "USA",
      country_birth == "SANBERNARDINO" ~ "USA",
      country_birth == "SANFRANCISCO" ~ "USA",
      country_birth == "SANMATEO" ~ "USA",
      country_birth == "SANMATEOCOUNTY" ~ "USA",
      country_birth == "SANTACLARA" ~ "USA",
      country_birth == "SANTACRUZ" ~ "USA",
      country_birth == "SF" ~ "USA",
      country_birth == "SM" ~ "USA",
      country_birth == "UNITEDSTATES" ~ "USA",
      country_birth == "US" ~ "USA",
      country_birth == "USA" ~ "USA",
      country_birth == "MARION" ~ "USA",
      country_birth == "US" ~ "USA",
      country_birth == "ESTADOS UNIDOS" ~ "USA",
      state_birth == "CALIFORNIA" ~ "USA",
      TRUE ~ country_birth
    ),
    race_multi_sum = sum(
      c(
        race_asian,
        race_black,
        race_hispanic,
        race_native_american,
        race_native_hawaiian,
        race_other,
        race_white
      ),
      na.rm = TRUE
    ),
    race_multi = if_else(
      race_multi_sum >= 2,  1, 0
    ),
    race = case_when(
      race_asian == 1 ~ "Asian or Asian American",
      race_black == 1 ~ "Black",
      race_hispanic == 1 ~ "Hispanic or Latinx",
      race_native_american == 1 ~ "Native America or Alaskan Native",
      race_native_hawaiian == 1 ~ "Native Hawaiian or Pacific Islander",
      race_white == 1 ~ "White",
      race_decline == 1 ~ "Decline to answer",
      race_other == 1 ~ "Other race"
    ),
    race = case_when(
      race == "Other race" & race_other_describe == "Indian" ~ "Asian or Asian American",
      race == "Other race" & race_other_describe == "Filipino" ~ "Asian or Asian American",
      race == "Other race" & race_other_describe == "Portuguese" ~ "White",
      race == "Other race" & race_other_describe == "Asian Indian" ~ "Asian or Asian American",
      race == "Other race" & race_other_describe == "Middle Eastern and Asian" ~ "Multi-racial",
      race == "Other race" & race_other_describe == "Hispanic" ~ "Hispanic or Latinx",
      race == "Other race" & race_other_describe == "Middle eastern/north African, Maltese" ~ "White",
      race == "Other race" & race_other_describe == "South East Asian" ~ "Asian or Asian American",
      race == "Other race" & race_other_describe == "Irish American" ~ "White",
      race == "Other race" & race_other_describe == "Jewish" ~ "White",
      race == "Other race" & race_other_describe == "Asian indian" ~ "Asian or Asian American",
      race == "Other race" & race_other_describe == "Chicana" ~ "Hispanic or Latinx",
      race == "Other race" & race_other_describe == "Iranian" ~ "White",
      race == "Other race" & race_other_describe == "Middle eastern" ~ "White",
      race == "Other race" & race_other_describe == "Middle eastern" ~ "White",
      TRUE ~ race
    ),
    race = if_else(
      race_multi == 1, "Multi-racial", race
    ),
    race_c = case_when(
      race == "Black" ~ "BIPOC",
      race == "Native America or Alaskan Native" ~ "BIPOC",
      race == "Native Hawaiian or Pacific Islander" ~ "BIPOC",
      race == "Decline to answer" ~ NA_character_,
      race == "Other race" ~ NA_character_,
      TRUE ~ race
    ),
    race_poc = as.factor(
      if_else(race_c == "White", "White", "POC")
    ),
    race_c = as.factor(race_c)
  ) %>% 
  ungroup()
```

```{r}
cc <-
  cc %>% 
  mutate(
    education = dplyr::recode_factor(
      education,
      "1" = "7th-9th grade",
      "2" = "10th-12th grade",
      "3" = "High school/GED",
      "4" = "Trade school/apprenticeship",
      "5" = "Partial college",
      "6" = "2-year college degree",
      "7" = "4-year college degree",
      "8" = "Graduate degree",
      "9" = "Unknown/unsure"
    ),
    marriage_status = dplyr::recode_factor(
      marriage_status,
      "1" = "Single",
      "2" = "Partner/married",
      "3" = "Divorced/separated",
      "4" = "Widowed",
      "99" = "Other"
    )
  )
```

```{r}
cc <- 
  cc %>% 
  mutate(
    source_stress_covid = dplyr::recode(
      source_stress_covid,
      "1" = "Health concerns",
      "2" = "Financial concerns",
      "3" = "Impact on child",
      "4" = "Impact on partner",
      "5" = "Impact on community",
      "6" = "Impact on other family",
      "7" = "Impact on close friends",
      "8" = "Impact on society",
      "9" = "Access to food",
      "10" = "Access to baby supplies",
      "11" = "Access to mental healthcare",
      "12" = "Social distancing/quarantine",
      "99" = "Other",
      "98" = "Not stressed"
    )
  ) 
```

```{r}
cc <-
  cc %>% 
  mutate(
    home_describe = case_when(
      home_describe == 1 ~ "Studio",
      home_describe == 2 ~ "1 bedroom",
      home_describe == 3 ~ "Multi-bedroom",
      home_describe == 4 ~ "No stable housing",
      home_describe == 97 ~ "Decline to answer"
    ),
    home_rent_own = case_when(
      home_rent_own == 1 ~ "Own",
      home_rent_own == 2 ~ "Rent",
      home_rent_own == 3 ~ "Occupied without payment",
      home_rent_own == 4 ~ "Transitional/supportive housing",
      home_rent_own == 5 ~ "Emergency shelter",
      home_rent_own == 6 ~ "Temporarily living w/ others",
      home_rent_own == 7 ~ "Vehicle",
      home_rent_own == 8 ~ "Tent, encampment, tiny house",
      home_rent_own == 99 ~ "Other",
      home_rent_own == 97 ~ "Decline to answer"
    ),
    home_owner = case_when(
      home_rent_own == "Own" ~ 1,
      is.na(home_rent_own) ~ NA_real_,
      TRUE ~ 0
    ),
    home_multi = if_else(
      home_describe == "Multi-bedroom", 1, 0
    )
  )
```

```{r}
cc <-
  cc %>% 
  mutate(
    job_status = case_when(
      job_fulltime == 1 ~ "fulltime paid job"                ,
      job_partime == 1 ~ "parttime paid job",
      job_looking == 1 ~ "unemployed/looking",
      job_unemployed == 1 ~ "unemployed/looking",
      job_student == 1 ~ "student",
      job_homecaregiver == 1 ~ "home caregiver",
      job_retired == 1 ~ "retired",
      job_other == 1 ~ "other",
      TRUE ~ NA_character_
    ),
    job_status_d = as.factor(
      case_when(
        job_status == "fulltime paid job" ~ "paid job",
        job_status == "parttime paid job" ~ "paid job",
        is.na(job_status) ~ NA_character_,
        TRUE ~ "other"
      )
    )
  )
```

```{r}
cc <-
  cc %>% 
  mutate(
    pregnancy_loss = case_when(
      preg_v_postnatal == "currently pregnant" ~ (pregnant_times - 1) - given_birth,
      preg_v_postnatal == "mother of infant" ~ pregnant_times - given_birth
    ),
    # discovered more errors in "pregnant_times" in women who had been pregnant before but did not count current pregnancy; fix
    pregnant_times = case_when(
      preg_v_postnatal == "currently pregnant" & pregnancy_loss < 0 ~ pregnant_times + 1, 
      TRUE ~ pregnant_times
    ),
    # recalculate with fixed "pregnant_times
    pregnancy_loss = case_when(
      preg_v_postnatal == "currently pregnant" ~ (pregnant_times - 1) - given_birth,
      preg_v_postnatal == "mother of infant" ~ pregnant_times - given_birth
    ),
    pregnancy_loss_d = as.factor(
      if_else(
        pregnancy_loss == 0, "no loss", "loss"
      )
    )
  ) %>% 
  ungroup()
```

```{r}
cc <-
  cc %>% 
  rename(
    self_resp_history = medical_self___1,
    self_diabetes_history = medical_self___2,
    self_cardio_history = medical_self___3,
    self_lung_history = medical_self___4,
    self_liver_history = medical_self___5,
    self_cancer_history = medical_self___6,
    self_immune_history  = medical_self___7
  ) %>% 
  group_by(cope_id) %>% 
  mutate(
    past_mh_sa_treatment = as.factor(
      if_else(
        past_mh_treatment == 1 | past_sa_treatment == 1,
        "past treatment", "none"
      )
    ),
    medical_history = sum( # not include mood and anxiety or immuno-compromising disease because captured by other variables
      c(
        self_resp_history,
        self_diabetes_history,
        self_cardio_history,
        self_lung_history,
        self_liver_history,
        self_cancer_history
      ),
      na.rm = TRUE
    ),
    medical_history_d = as.factor(
      if_else(
        medical_history > 0, "history", "no history"
      )
    ),
    history_mh_disorder = as.factor(history_mh_disorder)
  ) %>% 
  ungroup()
```

```{r}
cc <- 
  cc %>%  
  mutate(
    # code so higher scores are better support
    prenatal_support = dplyr::recode(
      prenatal_support,
      "1" = 2,
      "2" = 1,
      "3" = 0
    )
  )
```

## Calculate income-to-needs ratio 
```{r}
cc.1 <-
  cc %>% 
  group_by(cope_id) %>% 
  mutate(
    # some mothers who endorsed they had infants did not include their infants in count
    ppl_in_home_allchild == if_else(
      preg_v_postnatal == "mother of infant" & ppl_in_home_allchild == 0,
      1, ppl_in_home_allchild
    ),
    # fix one mother who marked a preschooler in home but did not respond to "ppl_in_home_allchild",
    ppl_in_home_allchild = if_else(
      ppl_in_home_preschool >= 1 & is.na(ppl_in_home_allchild),
      ppl_in_home_preschool, ppl_in_home_allchild
    ),
    #some people did not include themselves for number of adults in household
    ppl_in_home_adults = case_when(
      ppl_in_home_adults == 0 & household_partner == 0 ~ 1,
      ppl_in_home_adults == 1 & household_partner == 1 ~ 2,
      ppl_in_home_adults == 0 & household_partner == 1 ~ 2,
      TRUE ~ ppl_in_home_adults
    ),
    # calculate the total number of people in participant's household
    ppl_in_home_total = sum(
      c(ppl_in_home_adults, ppl_in_home_allchild),
      na.rm = TRUE
    ),
    # create a numeric version of income based on midpoint of bins
    income_numeric = case_when(
      income == "<$10k" ~ 10000,
      income == "$10k-$20k" ~ 15000,
      # given error in missing 20-30 bin for english survey, collapsing  20-30 and 30-50 to 30k
      income == "$20k-$30k" ~ 30000,
      income == "$30k-$40k" ~ 30000,
      income == "$40k-$50k" ~ 45000,
      income == "$50k-$60k" ~ 65000,
      income == "$60k-$80k" ~ 70000,
      income == "$80k-$100k" ~ 90000,
      income == "$100k-$120k" ~ 110000,
      income == "$120k-$140k" ~ 130000,
      income == "$140k-$160k" ~ 150000,
      income == "$160k-$180k" ~ 170000,
      income == "$180k-$200k" ~ 190000,
      income == "$200k-$220k" ~ 210000,
      income == "$220k-$250k" ~ 235000,
      income == ">$250k" ~ 250000
    ),
    # inr based on the federal poverty thresholds for number of people in household and number that are children
    fpl_threshold = case_when(
      ppl_in_home_total == 1 & ppl_in_home_allchild == 0 ~ 13300,
      ppl_in_home_total == 2 & ppl_in_home_allchild == 0 ~ 17120,
      ppl_in_home_total == 2 & ppl_in_home_allchild == 1 ~ 17622,
      ppl_in_home_total == 3 & ppl_in_home_allchild == 0 ~ 19998,
      ppl_in_home_total == 3 & ppl_in_home_allchild == 1 ~ 20578,
      ppl_in_home_total == 3 & ppl_in_home_allchild == 2 ~ 20598,
      ppl_in_home_total == 4 & ppl_in_home_allchild == 0 ~ 26370,
      ppl_in_home_total == 4 & ppl_in_home_allchild == 1 ~ 26801,
      ppl_in_home_total == 4 & ppl_in_home_allchild == 2 ~ 25926,
      ppl_in_home_total == 4 & ppl_in_home_allchild == 3 ~ 26017,
      ppl_in_home_total == 5 & ppl_in_home_allchild == 0 ~ 31800,
      ppl_in_home_total == 5 & ppl_in_home_allchild == 1 ~ 32263,
      ppl_in_home_total == 5 & ppl_in_home_allchild == 2 ~ 31275,
      ppl_in_home_total == 5 & ppl_in_home_allchild == 3 ~ 30510,
      ppl_in_home_total == 5 & ppl_in_home_allchild == 4 ~ 30044,
      ppl_in_home_total == 6 & ppl_in_home_allchild == 0 ~ 36576,
      ppl_in_home_total == 6 & ppl_in_home_allchild == 1 ~ 36721,
      ppl_in_home_total == 6 & ppl_in_home_allchild == 2 ~ 35965,
      ppl_in_home_total == 6 & ppl_in_home_allchild == 3 ~ 35239,
      ppl_in_home_total == 6 & ppl_in_home_allchild == 4 ~ 34161,
      ppl_in_home_total == 6 & ppl_in_home_allchild == 5 ~ 33522,
      ppl_in_home_total == 7 & ppl_in_home_allchild == 0 ~ 42085,
      ppl_in_home_total == 7 & ppl_in_home_allchild == 1 ~ 42348,
      ppl_in_home_total == 7 & ppl_in_home_allchild == 2 ~ 41442,
      ppl_in_home_total == 7 & ppl_in_home_allchild == 3 ~ 40811,
      ppl_in_home_total == 7 & ppl_in_home_allchild == 4 ~ 39635,
      ppl_in_home_total == 7 & ppl_in_home_allchild == 5 ~ 38262,
      ppl_in_home_total == 7 & ppl_in_home_allchild == 6 ~ 36757,
      ppl_in_home_total == 8 & ppl_in_home_allchild == 0 ~ 47069,
      ppl_in_home_total == 8 & ppl_in_home_allchild == 1 ~ 47485,
      ppl_in_home_total == 8 & ppl_in_home_allchild == 2 ~ 46630,
      ppl_in_home_total == 8 & ppl_in_home_allchild == 3 ~ 45881,
      ppl_in_home_total == 8 & ppl_in_home_allchild == 4 ~ 44818,
      ppl_in_home_total == 8 & ppl_in_home_allchild == 5 ~ 43470,
      ppl_in_home_total == 8 & ppl_in_home_allchild == 6 ~ 42066,
      ppl_in_home_total == 8 & ppl_in_home_allchild == 7 ~ 41709,
      ppl_in_home_total >= 9 & ppl_in_home_allchild == 0 ~ 56621,
      ppl_in_home_total >= 9 & ppl_in_home_allchild == 1 ~ 56895,
      ppl_in_home_total >= 9 & ppl_in_home_allchild == 2 ~ 56139,
      ppl_in_home_total >= 9 & ppl_in_home_allchild == 3 ~ 55503,
      ppl_in_home_total >= 9 & ppl_in_home_allchild == 4 ~ 54460,
      ppl_in_home_total >= 9 & ppl_in_home_allchild == 5 ~ 53025,
      ppl_in_home_total >= 9 & ppl_in_home_allchild == 6 ~ 51727,
      ppl_in_home_total >= 9 & ppl_in_home_allchild == 7 ~ 51406,
      ppl_in_home_total >= 9 & ppl_in_home_allchild >= 8 ~ 49426
    ),
    inr_fpl = income_numeric / fpl_threshold
  ) %>% 
  ungroup()
```

## Create variable indicating immigrant status
```{r}
cc.1 <-
  cc.1 %>% 
  mutate(
    immigrant = case_when(
      country_birth == "ESTADOS UNIDOS" ~ 0,
      country_birth == "USA" ~ 0,
      TRUE ~ 1
    )
  )
```

## Merge common variables for pregnant women and new mothers 
```{r}
cc1 <-
  cc.1 %>% 
  mutate(
    # merge pregnancy and mother variables that are common
    first_pregnancy = as.factor(
      case_when(
        first_pregnancy == 1 ~ 1,
        mom_first_pregnancy == 1 ~ 1,
        first_pregnancy == 0 ~ 0,
        mom_first_pregnancy == 0 ~ 0,
        TRUE ~ NA_real_
      )
    ),
    prenatal_complications_other_describe = case_when(
      !is.na(preg_complications_other_describe) ~ preg_complications_other_describe,
      !is.na(mom_preg_complications_other_describe) ~ mom_preg_complications_other_describe
    ),
    mat_care_concern = case_when(
      preg_v_postnatal == "currently pregnant" ~ preg_mat_care_concern,
      preg_v_postnatal == "mother of infant" ~ mom_mat_care_concern
    ),
    mat_care_concern_describe = case_when(
      preg_v_postnatal == "currently pregnant" ~ preg_mat_care_concern_describe,
      preg_v_postnatal == "mother of infant" ~ mom_mat_care_concern_describe,
    ),
    child_health_concern = case_when(
      preg_v_postnatal == "currently pregnant" ~ preg_child_health_concern,
      preg_v_postnatal == "mother of infant" ~ mom_child_health_concern
    ),
    child_health_concern_describe = case_when(
      !is.na(preg_child_health_concern_describe) ~ preg_child_health_concern_describe,
      !is.na(mom_child_health_concern_describe) ~ mom_child_health_concern_describe
    ),
    social_supp_change = current_social_supp_rating - prior_social_supp_rating,
    prenataL_care_change = case_when(
      preg_v_postnatal == "currently pregnant" ~ prenatal_support_change,
      preg_v_postnatal == "mother of infant" ~ mom_care_support_change
    ),
    mat_care_concern_rating = case_when(
      preg_v_postnatal == "currently pregnant" ~ preg_mat_care_concern_rating,
      preg_v_postnatal == "mother of infant" ~ mom_mat_care_concern_rating
    ),
    child_health_concern_rating = case_when(
      preg_v_postnatal == "currently pregnant" ~ preg_child_health_concern_rating,
      preg_v_postnatal == "mother of infant" ~ mom_child_health_concern_rating
    ),
    obgyn_care_change_rating = case_when(
      preg_v_postnatal == "currently pregnant" ~ prenatal_support_change,
      preg_v_postnatal == "mother of infant" ~ mom_care_support_change,
    ),
    # pregnancy complications
    gestational_diabetes = if_else(
      preg_diabetes == 1 | mom_diabetes == 1,
      1, 0
    ),
    prenatal_hypertension = if_else(
      preg_hypertension == 1 | mom_hypertension == 1,
      1, 0
    ),
    prenatal_smallfetal = if_else(
      preg_smallfetal == 1 | mom_smallfetal == 1,
      1, 0
    ),
    prenatal_shortcervix = if_else(
      preg_shortcervix == 1 | mom_shortcervix == 1,
      1, 0
    ),
    prenatal_complications_other = if_else(
      preg_complications_other == 1 | mom_complications_other == 1,
      1, 0
    )
  ) %>% 
  group_by(cope_id) %>% 
  mutate(
    prenatal_complications = sum(
      c(
        gestational_diabetes,
        prenatal_hypertension,
        prenatal_smallfetal,
        prenatal_shortcervix,
        prenatal_complications_other
      ),
      na.rm = TRUE
    ),
    prenatal_complications_d = as.factor(
      if_else(
        prenatal_complications > 0, "complication", "none"
      )
    ),
    access = sum(
      c(
        access_phone,
        access_computer,
        access_privacy,
        access_yard,
        access_park
      ),
      na.rm = TRUE
    )
  ) %>% 
  ungroup() %>% 
  dplyr::select(
    -mom_care_support_change,
    -mom_first_pregnancy,
    -preg_mat_care_concern,
    -mom_mat_care_concern,
    -mom_child_health_concern,
    -preg_child_health_concern,
    -mom_care_support_change,
    -preg_mat_care_concern_rating,
    -mom_mat_care_concern_rating, 
    -preg_child_health_concern_rating,
    -mom_child_health_concern_rating,
    -preg_diabetes,
    -mom_diabetes,
    -preg_hypertension,
    -mom_hypertension,
    -preg_smallfetal,
    -mom_smallfetal,
    -preg_shortcervix,
    -mom_shortcervix,
    -preg_complications_other,
    -mom_complications_other,
    -preg_complications_other_describe,
    -mom_preg_complications_other_describe,
    -preg_complications_other,
    -mom_preg_complications_other,
    -preg_mat_care_concern_describe,
    -mom_mat_care_concern_describe,
    -preg_child_health_concern_describe,
    -mom_child_health_concern_describe
  )
```

## Reformat/reduce some of the COVID stress variables

```{r}
cc2 <-
  cc1 %>% 
  group_by(cope_id) %>% 
  mutate(
    prenatal_care_changes = sum(
      c(
        prenatal_care_changes___1,
        prenatal_care_changes___2,
        prenatal_care_changes___3,
        prenatal_care_changes___4,
        prenatal_care_changes___5,
        prenatal_care_changes___6,
        prenatal_care_changes___7,
        prenatal_care_changes___8,
        prenatal_care_changes___9,
        prenatal_care_changes___10
      ),
      na.rm = TRUE
    ),
    birth_plan_changes = sum(
      c(
        birth_plan_changes___1,
        birth_plan_changes___2,
        birth_plan_changes___3,
        birth_plan_changes___4,
        birth_plan_changes___5,
        birth_plan_changes___6,
        birth_plan_changes___7,
        birth_plan_changes___8,
        birth_plan_changes___99
      ),
      na.rm = TRUE
    ),
    postnatal_plan_changes = sum(
      c(
        postnatal_plan_changes___1,
        postnatal_plan_changes___2,
        postnatal_plan_changes___3,
        postnatal_plan_changes___4,
        postnatal_plan_changes___5,
        postnatal_plan_changes___6,
        postnatal_plan_changes___7,
        postnatal_plan_changes___8,
        postnatal_plan_changes___9,
        postnatal_plan_changes___99
      ),
      na.rm = TRUE
    ),
    covid_positive_contacts = sum(
      c(
        covid_pos_contact___1,
        covid_pos_contact___2,
        covid_pos_contact___3,
        covid_pos_contact___4,
        covid_pos_contact___5,
        covid_pos_contact___8,
        covid_pos_contact___9,
        covid_pos_contact___99
      ),
      na.rm = TRUE
    ),
    covid_high_risks = sum(
      c(
        covid_high_risk___2,
        covid_high_risk___3,
        covid_high_risk___4,
        covid_high_risk___5,
        covid_high_risk___8,
        covid_high_risk___9,
        covid_high_risk___99
      ),
      na.rm = TRUE
    ),
    covid_high_risk_self = as.factor(covid_high_risk___1),
    current_job_move_remote_self_rev = dplyr::recode( # reverse coding given NOT going remote is worse
      current_job_move_remote___1,
      "1" = 0,
      "0" = 1
    ),
    current_job_move_remote_part_rev = dplyr::recode( # reverse coding given NOT going remote is worse
      current_job_move_remote___2,
      "1" = 0,
      "0" = 1
    ),
    curr_finance_impacts = sum(
      c(
        current_job_move_remote___1,
        current_job_move_remote___2,
        current_job_decrease_hours___1,
        current_job_decrease_hours___2,
        current_job_loss___1,
        current_job_loss___2,
        current_job_low_security___1,
        current_job_low_security___2,
        current_job_childcare___1,
        current_job_childcare___2,
        current_job_increase_hours___1,
        current_job_increase_hours___2,
        current_job_more_responsbility___1,
        current_job_more_responsbility___2,
        current_job_increase_reporting___1,
        current_job_increase_reporting___2,
        current_job_no_insurance___1,
        current_job_no_insurance___2,
        current_afford_childcare___1,
        current_afford_childcare___2,
        current_afford_rent___1,
        current_afford_rent___2,
        current_job_fire_employees___1,
        current_job_fire_employees___2,
        current_reduced_savings___1,
        current_reduced_savings___2
      ),
      na.rm = TRUE
    ),
    fut_job_move_remote_self_rev = dplyr::recode( # reverse coding given NOT going remote is worse
      fut_job_move_remote___1,
      "1" = 0,
      "0" = 1
    ),
    fut_job_move_remote_part_rev = dplyr::recode( # reverse coding given NOT going remote is worse
      fut_job_move_remote___2,
      "1" = 0,
      "0" = 1
    ),
    fut_finance_impacts = sum(
      c(
        fut_job_move_remote___1,
        fut_job_move_remote___2,
        fut_job_decrease_hours___1,
        fut_job_decrease_hours___2,
        fut_job_loss___1,
        fut_job_loss___2,
        fut_job_low_security___1,
        fut_job_low_security___2,
        fut_job_childcare___1,
        fut_job_childcare___2,
        fut_job_increase_hours___1,
        fut_job_increase_hours___2,
        fut_job_more_responsibility___1,
        fut_job_more_responsibility___2,
        fut_job_increase_reporting___1,
        fut_job_increase_reporting___2,
        fut_job_no_insurance___1,
        fut_job_no_insurance___2,
        fut_afford_childcare___1,
        fut_afford_childcare___2,
        fut_afford_rent___1,
        fut_afford_rent___2,
        future_job_fire_employees___1,
        future_job_fire_employees___2,
        fut_reduced_savings___1,
        fut_reduced_savings___2
      ),
      na.rm = TRUE
    ),
    covid_restrictions = sum( # only counting restrictions that are due to a suspected case or mandated (objective)
      c(
        covid_restrictions___7,
        covid_restrictions___8,
        covid_restrictions___9,
        covid_restrictions___10
      ),
      na.rm = TRUE
    ),
    covid_behavior_restrictions = sum(
      c(
        covid_behavior_restrictions___1,
        covid_behavior_restrictions___2,
        covid_behavior_restrictions___3,
        covid_behavior_restrictions___4,
        covid_behavior_restrictions___5,
        covid_behavior_restrictions___6,
        covid_behavior_restrictions___7,
        covid_behavior_restrictions___8,
        covid_behavior_restrictions___9,
        covid_behavior_restrictions___10,
        covid_behavior_restrictions___11,
        covid_behavior_restrictions___12,
        covid_behavior_restrictions___13
      ),
      na.rm = TRUE
    ),
    preg_birth_concern_rating = case_when(
      preg_birth_concern == 0 ~ 0,
      TRUE ~ preg_birth_concern_rating
    ),
    preg_supp_concern_rating = case_when(
      preg_support_concern == 0 ~ 0,
      TRUE ~ preg_supp_concern_rating
    ),
    mat_care_concern_rating = case_when(
      mat_care_concern == 0 ~ 0,
      TRUE ~ mat_care_concern_rating
    ),
    child_health_concern_rating = case_when(
      child_health_concern == 0 ~ 0,
      TRUE ~ child_health_concern_rating
    ),
    obgyn_care_change_rating = dplyr::recode(
      obgyn_care_change_rating,
      "1" = -2,
      "2" = -1,
      "3" = 0,
      "4" = 1,
      "5" = 2
    ),
    # rescaling distress variables so the bottom of the scale = 0
    birth_change_distress = if_else(
      !is.na(birth_change_distress),
      birth_change_distress - 1, birth_change_distress
    ),
    covid_self_distress = if_else(
      !is.na(covid_self_distress),
      covid_self_distress - 1, covid_self_distress
    ),
    covid_family_distress = if_else(
      !is.na(covid_family_distress),
      covid_family_distress - 1, covid_family_distress
    ),
    current_job_distress = if_else(
      !is.na(current_job_distress),
      current_job_distress - 1, current_job_distress
    ),
    future_job_distress = if_else(
      !is.na(future_job_distress),
      future_job_distress - 1, future_job_distress
    ),
    prior_social_supp_rating = if_else(
      !is.na(prior_social_supp_rating),
      prior_social_supp_rating - 1, prior_social_supp_rating
    ),
    current_social_supp_rating = if_else(
      !is.na(current_social_supp_rating),
      current_social_supp_rating - 1, current_social_supp_rating
    ),
    social_disruptions_rating = if_else(
      !is.na(social_disruptions_rating),
      social_disruptions_rating - 1, social_disruptions_rating
    ),
    impact_covid_rating = if_else(
      !is.na(impact_covid_rating),
      impact_covid_rating - 1, impact_covid_rating
    ),
    social_supp_change = current_social_supp_rating - prior_social_supp_rating,
    # rescale concerns about access ratings to 0
  ) %>% 
  mutate_at(
    vars(
      concern_food,
      concern_medicine,
      concern_babysupplies,
      concern_mh,
      concern_health_care,
      concern_social
    ),
    list(~. - 1)
  ) %>% 
  mutate(
    reduced_access_distress = mean(
      c(
        concern_food,
        concern_medicine,
        concern_babysupplies,
        concern_mh,
        concern_health_care,
        concern_social
      ),
      na.rm = TRUE
    )
  ) %>% 
  ungroup() %>% 
  mutate_at(
    vars(self_symp:other_living_in_home_symp),
    list(
      ~case_when(
        . == 1 ~ 0,
        . == 2 ~ 1,
        . == 3 ~ 1,
        TRUE ~ .
      )
    )
  ) %>% 
  mutate_at(
    vars(self_test:other_living_in_home_test),
    list(
      ~case_when(
        . == 1 ~ 0,
        . == 2 ~ 1,
        . == 3 ~ 0,
        . == 4 ~ 0
      )
    )
  ) %>% 
  mutate_at(
    vars(change_stress_rating:change_energy_rating),
    list(
      . %>% 
        dplyr::recode(
          "1" = -2,
          "2" = -1,
          "3" = 0,
          "4" = 1,
          "5" = 2
        )
    )
  ) %>% 
  mutate_at(
    vars(disrupted_social_rating:disrupted_meal_rating),
    list(
      . %>% 
        dplyr::recode(
          "1" = 3,
          "2" = 2,
          "3" = 1,
          "4" = 0
        )
    )
  ) %>% 
  group_by(cope_id) %>% 
  mutate(
    impact_covid_valence = dplyr::recode(
      impact_covid_valence,
      "1" = -3,
      "2" = -2,
      "3" = -1,
      "4" = 0,
      "5" = 1,
      "6" = 2,
      "7" = 3
    ),
    covid_disrupt_rating = mean(
      c(
        disrupted_social_rating,
        disrupted_physical_rating,
        disrupted_work_rating,
        disrupted_meal_rating
      ),
      na.rm = TRUE
    ),
    covid_symptoms = sum(
      c(
        self_symp,
        partner_symp,
        newborn_symp,
        other_children_symp,
        other_living_in_home_symp
      ),
      na.rm = TRUE
    ),
    covid_positive = sum(
      c(
        self_test,
        partner_test,
        newborn_test,
        other_children_test,
        other_living_in_home_test
      ),
      na.rm = TRUE
    ),
    covid_positive_d = case_when(
      covid_positive == 0 ~ 0,
      covid_positive > 0 ~ 1,
      TRUE ~ covid_positive
    ),
     covid_positive_contacts_d = case_when(
      covid_positive_contacts == 0 ~ 0,
      covid_positive_contacts > 0 ~ 1,
      TRUE ~ covid_positive_contacts
    ),
    covid_symptoms_d = case_when(
      covid_symptoms == 0 ~ 0,
      covid_symptoms > 0 ~ 1,
      TRUE ~ covid_positive
    ),
    covid_high_risks_d = case_when(
      covid_high_risks == 0 ~ 0,
      covid_high_risks > 0 ~ 1,
      TRUE ~ covid_high_risks
    ),
    covid_confirmed_number_d = case_when(
      covid_confirmed_number == 0 ~ 0,
      covid_confirmed_number > 0 ~ 1,
      TRUE ~ covid_confirmed_number
    )
  ) %>% 
  ungroup()

```

## Merge geocoded data
```{r}
cc2 <-
  cc2 %>% 
  left_join(
    read_csv(geocoded_file),
    by = "cope_id"
  )
```

```{r}
#write_csv(cc2, "~/Box/Mooddata_Coordinating/COPE/data/wrangled_cleaned_data_20201208.csv")
```

## Create separate pregnancy and mother of infant datasets
```{r}
cc2_preg <-
  cc2 %>% 
  filter(preg_v_postnatal == "currently pregnant") %>% 
  ungroup()

#write_csv(cc2_preg, "~/Box/Mooddata_Coordinating/COPE/data/wrangled_cleaned_data_PREG_20201208.csv")

cc2_preg_cal <-
  cc2_preg %>% 
  filter(!is.na(ca_county))

cc2_mom <-
  cc2 %>% 
  filter(preg_v_postnatal == "mother of infant") %>% 
  ungroup()

cc2_mom_cal <-
  cc2 %>% 
  filter(preg_v_postnatal == "mother of infant") %>% 
  ungroup()
```
